{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace Microsoft.NAV",
    "description": "This OData service is located at http://localhost",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/akeneoItems": {
      "get": {
        "tags": [
          "akeneoItems.akeneoItem"
        ],
        "summary": "Get entities from akeneoItems",
        "operationId": "akeneoItems.akeneoItem.ListAkeneoItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "no",
                  "no desc",
                  "description",
                  "description desc",
                  "lastDateModified",
                  "lastDateModified desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "no",
                  "description",
                  "lastDateModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of akeneoItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/akeneoItems({id})": {
      "get": {
        "tags": [
          "akeneoItems.akeneoItem"
        ],
        "summary": "Get entity from akeneoItems by key",
        "operationId": "akeneoItems.akeneoItem.GetAkeneoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of akeneoItem",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "akeneoItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "no",
                  "description",
                  "lastDateModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "companies.company"
        ],
        "summary": "Get entities from companies",
        "operationId": "companies.company.ListCompany",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "systemVersion",
                  "systemVersion desc",
                  "name",
                  "name desc",
                  "displayName",
                  "displayName desc",
                  "businessProfileId",
                  "businessProfileId desc",
                  "systemCreatedAt",
                  "systemCreatedAt desc",
                  "systemCreatedBy",
                  "systemCreatedBy desc",
                  "systemModifiedAt",
                  "systemModifiedAt desc",
                  "systemModifiedBy",
                  "systemModifiedBy desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "systemVersion",
                  "name",
                  "displayName",
                  "businessProfileId",
                  "systemCreatedAt",
                  "systemCreatedBy",
                  "systemModifiedAt",
                  "systemModifiedBy",
                  "customers",
                  "documents",
                  "documentLines",
                  "salesPrices",
                  "items3PL",
                  "itemUoMs",
                  "akeneoItems",
                  "receipts3PL",
                  "receiptLines3PL",
                  "warehousereceipts",
                  "warehouseReceiptLines",
                  "shipments3PL",
                  "shipmentLines3PL",
                  "warehouseshipments",
                  "warehouseShipmentLines",
                  "inventoryStatus",
                  "stockcorrections",
                  "stockCorrectionLines",
                  "stockoverviews",
                  "stockOverviewLines",
                  "statusParcelServices"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "customers",
                  "documents",
                  "documentLines",
                  "salesPrices",
                  "items3PL",
                  "itemUoMs",
                  "akeneoItems",
                  "receipts3PL",
                  "receiptLines3PL",
                  "warehousereceipts",
                  "warehouseReceiptLines",
                  "shipments3PL",
                  "shipmentLines3PL",
                  "warehouseshipments",
                  "warehouseShipmentLines",
                  "inventoryStatus",
                  "stockcorrections",
                  "stockCorrectionLines",
                  "stockoverviews",
                  "stockOverviewLines",
                  "statusParcelServices"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of company",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.company"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/companies({id})": {
      "get": {
        "tags": [
          "companies.company"
        ],
        "summary": "Get entity from companies by key",
        "operationId": "companies.company.GetCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "systemVersion",
                  "name",
                  "displayName",
                  "businessProfileId",
                  "systemCreatedAt",
                  "systemCreatedBy",
                  "systemModifiedAt",
                  "systemModifiedBy",
                  "customers",
                  "documents",
                  "documentLines",
                  "salesPrices",
                  "items3PL",
                  "itemUoMs",
                  "akeneoItems",
                  "receipts3PL",
                  "receiptLines3PL",
                  "warehousereceipts",
                  "warehouseReceiptLines",
                  "shipments3PL",
                  "shipmentLines3PL",
                  "warehouseshipments",
                  "warehouseShipmentLines",
                  "inventoryStatus",
                  "stockcorrections",
                  "stockCorrectionLines",
                  "stockoverviews",
                  "stockOverviewLines",
                  "statusParcelServices"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "customers",
                  "documents",
                  "documentLines",
                  "salesPrices",
                  "items3PL",
                  "itemUoMs",
                  "akeneoItems",
                  "receipts3PL",
                  "receiptLines3PL",
                  "warehousereceipts",
                  "warehouseReceiptLines",
                  "shipments3PL",
                  "shipmentLines3PL",
                  "warehouseshipments",
                  "warehouseShipmentLines",
                  "inventoryStatus",
                  "stockcorrections",
                  "stockCorrectionLines",
                  "stockoverviews",
                  "stockOverviewLines",
                  "statusParcelServices"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.company"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/akeneoItems": {
      "get": {
        "tags": [
          "companies.akeneoItem"
        ],
        "summary": "Get akeneoItems from companies",
        "operationId": "companies.ListAkeneoItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "no",
                  "no desc",
                  "description",
                  "description desc",
                  "lastDateModified",
                  "lastDateModified desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "no",
                  "description",
                  "lastDateModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of akeneoItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.akeneoItem"
        ],
        "summary": "Create new navigation property to akeneoItems for companies",
        "operationId": "companies.CreateAkeneoItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/akeneoItems({id1})": {
      "get": {
        "tags": [
          "companies.akeneoItem"
        ],
        "summary": "Get akeneoItems from companies",
        "operationId": "companies.GetAkeneoItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of akeneoItem",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "akeneoItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "no",
                  "description",
                  "lastDateModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.akeneoItem"
        ],
        "summary": "Update the navigation property akeneoItems in companies",
        "operationId": "companies.UpdateAkeneoItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of akeneoItem",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "akeneoItem"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.akeneoItem"
        ],
        "summary": "Delete navigation property akeneoItems for companies",
        "operationId": "companies.DeleteAkeneoItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of akeneoItem",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "akeneoItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/customers": {
      "get": {
        "tags": [
          "companies.customer"
        ],
        "summary": "Get customers from companies",
        "operationId": "companies.ListCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "tilroyId",
                  "tilroyId desc",
                  "name1",
                  "name1 desc",
                  "name2",
                  "name2 desc",
                  "emailCustomer",
                  "emailCustomer desc",
                  "countryISOCode",
                  "countryISOCode desc",
                  "postcode",
                  "postcode desc",
                  "addressStreet",
                  "addressStreet desc",
                  "houseNumberMain",
                  "houseNumberMain desc",
                  "boxMain",
                  "boxMain desc",
                  "address1",
                  "address1 desc",
                  "address2",
                  "address2 desc",
                  "city",
                  "city desc",
                  "language",
                  "language desc",
                  "phoneNo",
                  "phoneNo desc",
                  "mobilePhoneNo",
                  "mobilePhoneNo desc",
                  "customerNo",
                  "customerNo desc",
                  "vatRegistrationNo",
                  "vatRegistrationNo desc",
                  "companyName",
                  "companyName desc",
                  "emailFinance",
                  "emailFinance desc",
                  "defaultBillingAddress",
                  "defaultBillingAddress desc",
                  "countryISOCodeBilling",
                  "countryISOCodeBilling desc",
                  "address1Billing",
                  "address1Billing desc",
                  "address2Billing",
                  "address2Billing desc",
                  "addressStreetBilling",
                  "addressStreetBilling desc",
                  "houseNumberBilling",
                  "houseNumberBilling desc",
                  "boxBilling",
                  "boxBilling desc",
                  "postCodeBilling",
                  "postCodeBilling desc",
                  "cityBilling",
                  "cityBilling desc",
                  "vatType",
                  "vatType desc",
                  "needInvoice",
                  "needInvoice desc",
                  "dateTimeModified",
                  "dateTimeModified desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "tilroyId",
                  "name1",
                  "name2",
                  "emailCustomer",
                  "countryISOCode",
                  "postcode",
                  "addressStreet",
                  "houseNumberMain",
                  "boxMain",
                  "address1",
                  "address2",
                  "city",
                  "language",
                  "phoneNo",
                  "mobilePhoneNo",
                  "customerNo",
                  "vatRegistrationNo",
                  "companyName",
                  "emailFinance",
                  "defaultBillingAddress",
                  "countryISOCodeBilling",
                  "address1Billing",
                  "address2Billing",
                  "addressStreetBilling",
                  "houseNumberBilling",
                  "boxBilling",
                  "postCodeBilling",
                  "cityBilling",
                  "vatType",
                  "needInvoice",
                  "dateTimeModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of customer",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.customer"
        ],
        "summary": "Create new navigation property to customers for companies",
        "operationId": "companies.CreateCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.customer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/customers({id1})": {
      "get": {
        "tags": [
          "companies.customer"
        ],
        "summary": "Get customers from companies",
        "operationId": "companies.GetCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "tilroyId",
                  "name1",
                  "name2",
                  "emailCustomer",
                  "countryISOCode",
                  "postcode",
                  "addressStreet",
                  "houseNumberMain",
                  "boxMain",
                  "address1",
                  "address2",
                  "city",
                  "language",
                  "phoneNo",
                  "mobilePhoneNo",
                  "customerNo",
                  "vatRegistrationNo",
                  "companyName",
                  "emailFinance",
                  "defaultBillingAddress",
                  "countryISOCodeBilling",
                  "address1Billing",
                  "address2Billing",
                  "addressStreetBilling",
                  "houseNumberBilling",
                  "boxBilling",
                  "postCodeBilling",
                  "cityBilling",
                  "vatType",
                  "needInvoice",
                  "dateTimeModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.customer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.customer"
        ],
        "summary": "Update the navigation property customers in companies",
        "operationId": "companies.UpdateCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.customer"
        ],
        "summary": "Delete navigation property customers for companies",
        "operationId": "companies.DeleteCustomers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/documentLines": {
      "get": {
        "tags": [
          "companies.documentLines"
        ],
        "summary": "Get documentLines from companies",
        "operationId": "companies.ListDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "description",
                  "description desc",
                  "quantity",
                  "quantity desc",
                  "unitPrice",
                  "unitPrice desc",
                  "lineAmount",
                  "lineAmount desc",
                  "lineDiscountAmount",
                  "lineDiscountAmount desc",
                  "netSalesPrice",
                  "netSalesPrice desc",
                  "shopStockNo",
                  "shopStockNo desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "shippingAgent",
                  "shippingAgent desc",
                  "collectionMethod",
                  "collectionMethod desc",
                  "tilroyLineId",
                  "tilroyLineId desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of documentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.documentLines"
        ],
        "summary": "Create new navigation property to documentLines for companies",
        "operationId": "companies.CreateDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/documentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "companies.documentLines"
        ],
        "summary": "Get documentLines from companies",
        "operationId": "companies.GetDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.documentLines"
        ],
        "summary": "Update the navigation property documentLines in companies",
        "operationId": "companies.UpdateDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.documentLines"
        ],
        "summary": "Delete navigation property documentLines for companies",
        "operationId": "companies.DeleteDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/documents": {
      "get": {
        "tags": [
          "companies.document"
        ],
        "summary": "Get documents from companies",
        "operationId": "companies.ListDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "orderNo",
                  "orderNo desc",
                  "shopHandlingNo",
                  "shopHandlingNo desc",
                  "orderDate",
                  "orderDate desc",
                  "sellToCustomerNo",
                  "sellToCustomerNo desc",
                  "selltoName",
                  "selltoName desc",
                  "selltoName2",
                  "selltoName2 desc",
                  "selltoEmailCustomer",
                  "selltoEmailCustomer desc",
                  "selltoAddress",
                  "selltoAddress desc",
                  "selltoAddress2",
                  "selltoAddress2 desc",
                  "selltoHouseNumber",
                  "selltoHouseNumber desc",
                  "selltoBox",
                  "selltoBox desc",
                  "selltoPostCode",
                  "selltoPostCode desc",
                  "selltoCity",
                  "selltoCity desc",
                  "selltoCounty",
                  "selltoCounty desc",
                  "selltoCountryRegion",
                  "selltoCountryRegion desc",
                  "selltoPhoneNo",
                  "selltoPhoneNo desc",
                  "selltoMobilePhoneNo",
                  "selltoMobilePhoneNo desc",
                  "selltoContact",
                  "selltoContact desc",
                  "billtoVATRegNo",
                  "billtoVATRegNo desc",
                  "inclVAT",
                  "inclVAT desc",
                  "posTotalAmountDiscount",
                  "posTotalAmountDiscount desc",
                  "posTotalAmountExclVat",
                  "posTotalAmountExclVat desc",
                  "posTotalAmountInclVat",
                  "posTotalAmountInclVat desc",
                  "posTotalAmountVat",
                  "posTotalAmountVat desc",
                  "shiptoName",
                  "shiptoName desc",
                  "shiptoName2",
                  "shiptoName2 desc",
                  "shiptoAddress",
                  "shiptoAddress desc",
                  "shiptoAddress2",
                  "shiptoAddress2 desc",
                  "shiptoHouseNumber",
                  "shiptoHouseNumber desc",
                  "shiptoBox",
                  "shiptoBox desc",
                  "shiptoPostCode",
                  "shiptoPostCode desc",
                  "shiptoCity",
                  "shiptoCity desc",
                  "shiptoCounty",
                  "shiptoCounty desc",
                  "shiptoCountryRegionCode",
                  "shiptoCountryRegionCode desc",
                  "shiptoEmail",
                  "shiptoEmail desc",
                  "shiptoPhoneNo",
                  "shiptoPhoneNo desc",
                  "shiptoContact",
                  "shiptoContact desc",
                  "documentType",
                  "documentType desc",
                  "services",
                  "services desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "orderNo",
                  "shopHandlingNo",
                  "orderDate",
                  "sellToCustomerNo",
                  "selltoName",
                  "selltoName2",
                  "selltoEmailCustomer",
                  "selltoAddress",
                  "selltoAddress2",
                  "selltoHouseNumber",
                  "selltoBox",
                  "selltoPostCode",
                  "selltoCity",
                  "selltoCounty",
                  "selltoCountryRegion",
                  "selltoPhoneNo",
                  "selltoMobilePhoneNo",
                  "selltoContact",
                  "billtoVATRegNo",
                  "inclVAT",
                  "posTotalAmountDiscount",
                  "posTotalAmountExclVat",
                  "posTotalAmountInclVat",
                  "posTotalAmountVat",
                  "shiptoName",
                  "shiptoName2",
                  "shiptoAddress",
                  "shiptoAddress2",
                  "shiptoHouseNumber",
                  "shiptoBox",
                  "shiptoPostCode",
                  "shiptoCity",
                  "shiptoCounty",
                  "shiptoCountryRegionCode",
                  "shiptoEmail",
                  "shiptoPhoneNo",
                  "shiptoContact",
                  "documentType",
                  "services",
                  "dateTimeModifiedPTE",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of document",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.document"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.document"
        ],
        "summary": "Create new navigation property to documents for companies",
        "operationId": "companies.CreateDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.document"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/documents({id1})": {
      "get": {
        "tags": [
          "companies.document"
        ],
        "summary": "Get documents from companies",
        "operationId": "companies.GetDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "orderNo",
                  "shopHandlingNo",
                  "orderDate",
                  "sellToCustomerNo",
                  "selltoName",
                  "selltoName2",
                  "selltoEmailCustomer",
                  "selltoAddress",
                  "selltoAddress2",
                  "selltoHouseNumber",
                  "selltoBox",
                  "selltoPostCode",
                  "selltoCity",
                  "selltoCounty",
                  "selltoCountryRegion",
                  "selltoPhoneNo",
                  "selltoMobilePhoneNo",
                  "selltoContact",
                  "billtoVATRegNo",
                  "inclVAT",
                  "posTotalAmountDiscount",
                  "posTotalAmountExclVat",
                  "posTotalAmountInclVat",
                  "posTotalAmountVat",
                  "shiptoName",
                  "shiptoName2",
                  "shiptoAddress",
                  "shiptoAddress2",
                  "shiptoHouseNumber",
                  "shiptoBox",
                  "shiptoPostCode",
                  "shiptoCity",
                  "shiptoCounty",
                  "shiptoCountryRegionCode",
                  "shiptoEmail",
                  "shiptoPhoneNo",
                  "shiptoContact",
                  "documentType",
                  "services",
                  "dateTimeModifiedPTE",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.document"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.document"
        ],
        "summary": "Update the navigation property documents in companies",
        "operationId": "companies.UpdateDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.document"
        ],
        "summary": "Delete navigation property documents for companies",
        "operationId": "companies.DeleteDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/inventoryStatus": {
      "get": {
        "tags": [
          "companies.inventoryStatus"
        ],
        "summary": "Get inventoryStatus from companies",
        "operationId": "companies.ListInventoryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "location desc",
                  "item",
                  "item desc",
                  "itemVariant",
                  "itemVariant desc",
                  "locationType",
                  "locationType desc",
                  "availableStock",
                  "availableStock desc",
                  "availableReservedStock",
                  "availableReservedStock desc",
                  "expectedStock",
                  "expectedStock desc",
                  "expectedReservedStock",
                  "expectedReservedStock desc",
                  "expectedDate",
                  "expectedDate desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "datetimeRegistered",
                  "datetimeRegistered desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "item",
                  "itemVariant",
                  "locationType",
                  "availableStock",
                  "availableReservedStock",
                  "expectedStock",
                  "expectedReservedStock",
                  "expectedDate",
                  "unitOfMeasure",
                  "datetimeRegistered",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of inventoryStatus",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.inventoryStatus"
        ],
        "summary": "Create new navigation property to inventoryStatus for companies",
        "operationId": "companies.CreateInventoryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/inventoryStatus(location={location},item={item},itemVariant={itemVariant})": {
      "get": {
        "tags": [
          "companies.inventoryStatus"
        ],
        "summary": "Get inventoryStatus from companies",
        "operationId": "companies.GetInventoryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "item",
                  "itemVariant",
                  "locationType",
                  "availableStock",
                  "availableReservedStock",
                  "expectedStock",
                  "expectedReservedStock",
                  "expectedDate",
                  "unitOfMeasure",
                  "datetimeRegistered",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.inventoryStatus"
        ],
        "summary": "Update the navigation property inventoryStatus in companies",
        "operationId": "companies.UpdateInventoryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.inventoryStatus"
        ],
        "summary": "Delete navigation property inventoryStatus for companies",
        "operationId": "companies.DeleteInventoryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/items3PL": {
      "get": {
        "tags": [
          "companies.item3PL"
        ],
        "summary": "Get items3PL from companies",
        "operationId": "companies.ListItems3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "itemNo",
                  "itemNo desc",
                  "vendorItemNo",
                  "vendorItemNo desc",
                  "description",
                  "description desc",
                  "searchDescription",
                  "searchDescription desc",
                  "baseUnitofMeasure",
                  "baseUnitofMeasure desc",
                  "vendorNo",
                  "vendorNo desc",
                  "countryRegionofOriginCode",
                  "countryRegionofOriginCode desc",
                  "countryRegionPurchasedCode",
                  "countryRegionPurchasedCode desc",
                  "itemCategoryCode",
                  "itemCategoryCode desc",
                  "barCodeInnerBox",
                  "barCodeInnerBox desc",
                  "grossWeight",
                  "grossWeight desc",
                  "netWeight",
                  "netWeight desc",
                  "productCategory",
                  "productCategory desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of item3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.item3PL"
        ],
        "summary": "Create new navigation property to items3PL for companies",
        "operationId": "companies.CreateItems3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/items3PL({id1})": {
      "get": {
        "tags": [
          "companies.item3PL"
        ],
        "summary": "Get items3PL from companies",
        "operationId": "companies.GetItems3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.item3PL"
        ],
        "summary": "Update the navigation property items3PL in companies",
        "operationId": "companies.UpdateItems3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.item3PL"
        ],
        "summary": "Delete navigation property items3PL for companies",
        "operationId": "companies.DeleteItems3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/itemUoMs": {
      "get": {
        "tags": [
          "companies.itemUoM"
        ],
        "summary": "Get itemUoMs from companies",
        "operationId": "companies.ListItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "codeUoM",
                  "codeUoM desc",
                  "uomDetails",
                  "uomDetails desc",
                  "minPickUoM",
                  "minPickUoM desc",
                  "qtyperUoM",
                  "qtyperUoM desc",
                  "lengthUoM",
                  "lengthUoM desc",
                  "widthUoM",
                  "widthUoM desc",
                  "heightUoM",
                  "heightUoM desc",
                  "referenceNo",
                  "referenceNo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of itemUoM",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.itemUoM"
        ],
        "summary": "Create new navigation property to itemUoMs for companies",
        "operationId": "companies.CreateItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/itemUoMs({id1})": {
      "get": {
        "tags": [
          "companies.itemUoM"
        ],
        "summary": "Get itemUoMs from companies",
        "operationId": "companies.GetItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.itemUoM"
        ],
        "summary": "Update the navigation property itemUoMs in companies",
        "operationId": "companies.UpdateItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.itemUoM"
        ],
        "summary": "Delete navigation property itemUoMs for companies",
        "operationId": "companies.DeleteItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/receiptLines3PL": {
      "get": {
        "tags": [
          "companies.receiptLine3PL"
        ],
        "summary": "Get receiptLines3PL from companies",
        "operationId": "companies.ListReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "itemNo",
                  "itemNo desc",
                  "itemDescription",
                  "itemDescription desc",
                  "qty",
                  "qty desc",
                  "qtyRejected",
                  "qtyRejected desc",
                  "reasonCode",
                  "reasonCode desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of receiptLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.receiptLine3PL"
        ],
        "summary": "Create new navigation property to receiptLines3PL for companies",
        "operationId": "companies.CreateReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/receiptLines3PL({id1})": {
      "get": {
        "tags": [
          "companies.receiptLine3PL"
        ],
        "summary": "Get receiptLines3PL from companies",
        "operationId": "companies.GetReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.receiptLine3PL"
        ],
        "summary": "Update the navigation property receiptLines3PL in companies",
        "operationId": "companies.UpdateReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.receiptLine3PL"
        ],
        "summary": "Delete navigation property receiptLines3PL for companies",
        "operationId": "companies.DeleteReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/receipts3PL": {
      "get": {
        "tags": [
          "companies.receipt3PL"
        ],
        "summary": "Get receipts3PL from companies",
        "operationId": "companies.ListReceipts3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "transportType",
                  "transportType desc",
                  "referenceNo",
                  "referenceNo desc",
                  "originalShipmentNo",
                  "originalShipmentNo desc",
                  "grossWeight",
                  "grossWeight desc",
                  "cubage",
                  "cubage desc",
                  "containerSize",
                  "containerSize desc",
                  "vendorNo",
                  "vendorNo desc",
                  "returnAddress",
                  "returnAddress desc",
                  "returnAddress2",
                  "returnAddress2 desc",
                  "returnCity",
                  "returnCity desc",
                  "returnPostCode",
                  "returnPostCode desc",
                  "returnCountry",
                  "returnCountry desc",
                  "warehouseReceiptDate",
                  "warehouseReceiptDate desc",
                  "comment",
                  "comment desc",
                  "location",
                  "location desc",
                  "createModify",
                  "createModify desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "transportType",
                  "referenceNo",
                  "originalShipmentNo",
                  "grossWeight",
                  "cubage",
                  "containerSize",
                  "vendorNo",
                  "returnAddress",
                  "returnAddress2",
                  "returnCity",
                  "returnPostCode",
                  "returnCountry",
                  "warehouseReceiptDate",
                  "comment",
                  "location",
                  "createModify",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of receipt3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.receipt3PL"
        ],
        "summary": "Create new navigation property to receipts3PL for companies",
        "operationId": "companies.CreateReceipts3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/receipts3PL({id1})": {
      "get": {
        "tags": [
          "companies.receipt3PL"
        ],
        "summary": "Get receipts3PL from companies",
        "operationId": "companies.GetReceipts3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "transportType",
                  "referenceNo",
                  "originalShipmentNo",
                  "grossWeight",
                  "cubage",
                  "containerSize",
                  "vendorNo",
                  "returnAddress",
                  "returnAddress2",
                  "returnCity",
                  "returnPostCode",
                  "returnCountry",
                  "warehouseReceiptDate",
                  "comment",
                  "location",
                  "createModify",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.receipt3PL"
        ],
        "summary": "Update the navigation property receipts3PL in companies",
        "operationId": "companies.UpdateReceipts3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.receipt3PL"
        ],
        "summary": "Delete navigation property receipts3PL for companies",
        "operationId": "companies.DeleteReceipts3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/salesPrices": {
      "get": {
        "tags": [
          "companies.salesPrice"
        ],
        "summary": "Get salesPrices from companies",
        "operationId": "companies.ListSalesPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "salesCode",
                  "salesCode desc",
                  "itemNo",
                  "itemNo desc",
                  "unitofMeasureCode",
                  "unitofMeasureCode desc",
                  "unitPrice",
                  "unitPrice desc",
                  "minimumQuantity",
                  "minimumQuantity desc",
                  "startingDate",
                  "startingDate desc",
                  "endingDate",
                  "endingDate desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "salesCode",
                  "itemNo",
                  "unitofMeasureCode",
                  "unitPrice",
                  "minimumQuantity",
                  "startingDate",
                  "endingDate",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of salesPrice",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.salesPrice"
        ],
        "summary": "Create new navigation property to salesPrices for companies",
        "operationId": "companies.CreateSalesPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/salesPrices({id1})": {
      "get": {
        "tags": [
          "companies.salesPrice"
        ],
        "summary": "Get salesPrices from companies",
        "operationId": "companies.GetSalesPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "salesCode",
                  "itemNo",
                  "unitofMeasureCode",
                  "unitPrice",
                  "minimumQuantity",
                  "startingDate",
                  "endingDate",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.salesPrice"
        ],
        "summary": "Update the navigation property salesPrices in companies",
        "operationId": "companies.UpdateSalesPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.salesPrice"
        ],
        "summary": "Delete navigation property salesPrices for companies",
        "operationId": "companies.DeleteSalesPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/shipmentLines3PL": {
      "get": {
        "tags": [
          "companies.shipmentLine3PL"
        ],
        "summary": "Get shipmentLines3PL from companies",
        "operationId": "companies.ListShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "grossWeight",
                  "grossWeight desc",
                  "netWeight",
                  "netWeight desc",
                  "tareWeight",
                  "tareWeight desc",
                  "cubage",
                  "cubage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of shipmentLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.shipmentLine3PL"
        ],
        "summary": "Create new navigation property to shipmentLines3PL for companies",
        "operationId": "companies.CreateShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/shipmentLines3PL({id1})": {
      "get": {
        "tags": [
          "companies.shipmentLine3PL"
        ],
        "summary": "Get shipmentLines3PL from companies",
        "operationId": "companies.GetShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.shipmentLine3PL"
        ],
        "summary": "Update the navigation property shipmentLines3PL in companies",
        "operationId": "companies.UpdateShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.shipmentLine3PL"
        ],
        "summary": "Delete navigation property shipmentLines3PL for companies",
        "operationId": "companies.DeleteShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/shipments3PL": {
      "get": {
        "tags": [
          "companies.shipment3PL"
        ],
        "summary": "Get shipments3PL from companies",
        "operationId": "companies.ListShipments3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "location",
                  "location desc",
                  "no",
                  "no desc",
                  "deliveryTypeCode",
                  "deliveryTypeCode desc",
                  "shipmentDate",
                  "shipmentDate desc",
                  "shippingAgentCode",
                  "shippingAgentCode desc",
                  "shippingAgentName",
                  "shippingAgentName desc",
                  "shipToAddressCode",
                  "shipToAddressCode desc",
                  "shipToName",
                  "shipToName desc",
                  "shipToStreet",
                  "shipToStreet desc",
                  "shipToBox",
                  "shipToBox desc",
                  "shipToHousenumber",
                  "shipToHousenumber desc",
                  "shipToAddressCity",
                  "shipToAddressCity desc",
                  "shipToAddressPostCode",
                  "shipToAddressPostCode desc",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryCode desc",
                  "shipToAddressCountryName",
                  "shipToAddressCountryName desc",
                  "sellToaddressEmail",
                  "sellToaddressEmail desc",
                  "languageCode",
                  "languageCode desc",
                  "comment",
                  "comment desc",
                  "name",
                  "name desc",
                  "grossWeight",
                  "grossWeight desc",
                  "cubage",
                  "cubage desc",
                  "orderNo",
                  "orderNo desc",
                  "routeCode",
                  "routeCode desc",
                  "sequenceNo",
                  "sequenceNo desc",
                  "createModify",
                  "createModify desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "location",
                  "no",
                  "deliveryTypeCode",
                  "shipmentDate",
                  "shippingAgentCode",
                  "shippingAgentName",
                  "shipToAddressCode",
                  "shipToName",
                  "shipToStreet",
                  "shipToBox",
                  "shipToHousenumber",
                  "shipToAddressCity",
                  "shipToAddressPostCode",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryName",
                  "sellToaddressEmail",
                  "languageCode",
                  "comment",
                  "name",
                  "grossWeight",
                  "cubage",
                  "orderNo",
                  "routeCode",
                  "sequenceNo",
                  "createModify",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of shipment3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.shipment3PL"
        ],
        "summary": "Create new navigation property to shipments3PL for companies",
        "operationId": "companies.CreateShipments3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/shipments3PL({id1})": {
      "get": {
        "tags": [
          "companies.shipment3PL"
        ],
        "summary": "Get shipments3PL from companies",
        "operationId": "companies.GetShipments3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "location",
                  "no",
                  "deliveryTypeCode",
                  "shipmentDate",
                  "shippingAgentCode",
                  "shippingAgentName",
                  "shipToAddressCode",
                  "shipToName",
                  "shipToStreet",
                  "shipToBox",
                  "shipToHousenumber",
                  "shipToAddressCity",
                  "shipToAddressPostCode",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryName",
                  "sellToaddressEmail",
                  "languageCode",
                  "comment",
                  "name",
                  "grossWeight",
                  "cubage",
                  "orderNo",
                  "routeCode",
                  "sequenceNo",
                  "createModify",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.shipment3PL"
        ],
        "summary": "Update the navigation property shipments3PL in companies",
        "operationId": "companies.UpdateShipments3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.shipment3PL"
        ],
        "summary": "Delete navigation property shipments3PL for companies",
        "operationId": "companies.DeleteShipments3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/statusParcelServices": {
      "get": {
        "tags": [
          "companies.statusParcelService"
        ],
        "summary": "Get statusParcelServices from companies",
        "operationId": "companies.ListStatusParcelServices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "trackingNo",
                  "trackingNo desc",
                  "trackingStatus",
                  "trackingStatus desc",
                  "returnMessage",
                  "returnMessage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "trackingNo",
                  "trackingStatus",
                  "returnMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of statusParcelService",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.statusParcelService"
        ],
        "summary": "Create new navigation property to statusParcelServices for companies",
        "operationId": "companies.CreateStatusParcelServices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/statusParcelServices({id1})": {
      "get": {
        "tags": [
          "companies.statusParcelService"
        ],
        "summary": "Get statusParcelServices from companies",
        "operationId": "companies.GetStatusParcelServices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of statusParcelService",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "statusParcelService"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "trackingNo",
                  "trackingStatus",
                  "returnMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.statusParcelService"
        ],
        "summary": "Update the navigation property statusParcelServices in companies",
        "operationId": "companies.UpdateStatusParcelServices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of statusParcelService",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "statusParcelService"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.statusParcelService"
        ],
        "summary": "Delete navigation property statusParcelServices for companies",
        "operationId": "companies.DeleteStatusParcelServices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of statusParcelService",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "statusParcelService"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockCorrectionLines": {
      "get": {
        "tags": [
          "companies.stockCorrectionLines"
        ],
        "summary": "Get stockCorrectionLines from companies",
        "operationId": "companies.ListStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockCorrectionLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.stockCorrectionLines"
        ],
        "summary": "Create new navigation property to stockCorrectionLines for companies",
        "operationId": "companies.CreateStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockCorrectionLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "companies.stockCorrectionLines"
        ],
        "summary": "Get stockCorrectionLines from companies",
        "operationId": "companies.GetStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.stockCorrectionLines"
        ],
        "summary": "Update the navigation property stockCorrectionLines in companies",
        "operationId": "companies.UpdateStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.stockCorrectionLines"
        ],
        "summary": "Delete navigation property stockCorrectionLines for companies",
        "operationId": "companies.DeleteStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockcorrections": {
      "get": {
        "tags": [
          "companies.stockcorrection"
        ],
        "summary": "Get stockcorrections from companies",
        "operationId": "companies.ListStockcorrections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "orderDate",
                  "orderDate desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockcorrection",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.stockcorrection"
        ],
        "summary": "Create new navigation property to stockcorrections for companies",
        "operationId": "companies.CreateStockcorrections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockcorrections({id1})": {
      "get": {
        "tags": [
          "companies.stockcorrection"
        ],
        "summary": "Get stockcorrections from companies",
        "operationId": "companies.GetStockcorrections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.stockcorrection"
        ],
        "summary": "Update the navigation property stockcorrections in companies",
        "operationId": "companies.UpdateStockcorrections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.stockcorrection"
        ],
        "summary": "Delete navigation property stockcorrections for companies",
        "operationId": "companies.DeleteStockcorrections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockOverviewLines": {
      "get": {
        "tags": [
          "companies.stockOverviewLines"
        ],
        "summary": "Get stockOverviewLines from companies",
        "operationId": "companies.ListStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockOverviewLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.stockOverviewLines"
        ],
        "summary": "Create new navigation property to stockOverviewLines for companies",
        "operationId": "companies.CreateStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockOverviewLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "companies.stockOverviewLines"
        ],
        "summary": "Get stockOverviewLines from companies",
        "operationId": "companies.GetStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.stockOverviewLines"
        ],
        "summary": "Update the navigation property stockOverviewLines in companies",
        "operationId": "companies.UpdateStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.stockOverviewLines"
        ],
        "summary": "Delete navigation property stockOverviewLines for companies",
        "operationId": "companies.DeleteStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockoverviews": {
      "get": {
        "tags": [
          "companies.stockoverview"
        ],
        "summary": "Get stockoverviews from companies",
        "operationId": "companies.ListStockoverviews",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "orderDate",
                  "orderDate desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockoverview",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.stockoverview"
        ],
        "summary": "Create new navigation property to stockoverviews for companies",
        "operationId": "companies.CreateStockoverviews",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/stockoverviews({id1})": {
      "get": {
        "tags": [
          "companies.stockoverview"
        ],
        "summary": "Get stockoverviews from companies",
        "operationId": "companies.GetStockoverviews",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.stockoverview"
        ],
        "summary": "Update the navigation property stockoverviews in companies",
        "operationId": "companies.UpdateStockoverviews",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.stockoverview"
        ],
        "summary": "Delete navigation property stockoverviews for companies",
        "operationId": "companies.DeleteStockoverviews",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseReceiptLines": {
      "get": {
        "tags": [
          "companies.warehouseReceiptLines"
        ],
        "summary": "Get warehouseReceiptLines from companies",
        "operationId": "companies.ListWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseReceiptLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.warehouseReceiptLines"
        ],
        "summary": "Create new navigation property to warehouseReceiptLines for companies",
        "operationId": "companies.CreateWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseReceiptLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "companies.warehouseReceiptLines"
        ],
        "summary": "Get warehouseReceiptLines from companies",
        "operationId": "companies.GetWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.warehouseReceiptLines"
        ],
        "summary": "Update the navigation property warehouseReceiptLines in companies",
        "operationId": "companies.UpdateWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.warehouseReceiptLines"
        ],
        "summary": "Delete navigation property warehouseReceiptLines for companies",
        "operationId": "companies.DeleteWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehousereceipts": {
      "get": {
        "tags": [
          "companies.warehousereceipt"
        ],
        "summary": "Get warehousereceipts from companies",
        "operationId": "companies.ListWarehousereceipts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "reference",
                  "reference desc",
                  "orginalShipmentNo",
                  "orginalShipmentNo desc",
                  "externalDocumentNo",
                  "externalDocumentNo desc",
                  "receiptDate",
                  "receiptDate desc",
                  "transportType",
                  "transportType desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "orginalShipmentNo",
                  "externalDocumentNo",
                  "receiptDate",
                  "transportType",
                  "dateTimeModifiedPTE",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehousereceipt",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.warehousereceipt"
        ],
        "summary": "Create new navigation property to warehousereceipts for companies",
        "operationId": "companies.CreateWarehousereceipts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehousereceipts({id1})": {
      "get": {
        "tags": [
          "companies.warehousereceipt"
        ],
        "summary": "Get warehousereceipts from companies",
        "operationId": "companies.GetWarehousereceipts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "orginalShipmentNo",
                  "externalDocumentNo",
                  "receiptDate",
                  "transportType",
                  "dateTimeModifiedPTE",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.warehousereceipt"
        ],
        "summary": "Update the navigation property warehousereceipts in companies",
        "operationId": "companies.UpdateWarehousereceipts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.warehousereceipt"
        ],
        "summary": "Delete navigation property warehousereceipts for companies",
        "operationId": "companies.DeleteWarehousereceipts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseShipmentLines": {
      "get": {
        "tags": [
          "companies.warehouseShipmentLines"
        ],
        "summary": "Get warehouseShipmentLines from companies",
        "operationId": "companies.ListWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "carrier",
                  "carrier desc",
                  "ttCode",
                  "ttCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseShipmentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.warehouseShipmentLines"
        ],
        "summary": "Create new navigation property to warehouseShipmentLines for companies",
        "operationId": "companies.CreateWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseShipmentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "companies.warehouseShipmentLines"
        ],
        "summary": "Get warehouseShipmentLines from companies",
        "operationId": "companies.GetWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.warehouseShipmentLines"
        ],
        "summary": "Update the navigation property warehouseShipmentLines in companies",
        "operationId": "companies.UpdateWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.warehouseShipmentLines"
        ],
        "summary": "Delete navigation property warehouseShipmentLines for companies",
        "operationId": "companies.DeleteWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseshipments": {
      "get": {
        "tags": [
          "companies.warehouseshipment"
        ],
        "summary": "Get warehouseshipments from companies",
        "operationId": "companies.ListWarehouseshipments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "reference",
                  "reference desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseshipment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "companies.warehouseshipment"
        ],
        "summary": "Create new navigation property to warehouseshipments for companies",
        "operationId": "companies.CreateWarehouseshipments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/companies({id})/warehouseshipments({id1})": {
      "get": {
        "tags": [
          "companies.warehouseshipment"
        ],
        "summary": "Get warehouseshipments from companies",
        "operationId": "companies.GetWarehouseshipments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "companies.warehouseshipment"
        ],
        "summary": "Update the navigation property warehouseshipments in companies",
        "operationId": "companies.UpdateWarehouseshipments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "companies.warehouseshipment"
        ],
        "summary": "Delete navigation property warehouseshipments for companies",
        "operationId": "companies.DeleteWarehouseshipments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of company",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "company"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "customers.customer"
        ],
        "summary": "Get entities from customers",
        "operationId": "customers.customer.ListCustomer",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "tilroyId",
                  "tilroyId desc",
                  "name1",
                  "name1 desc",
                  "name2",
                  "name2 desc",
                  "emailCustomer",
                  "emailCustomer desc",
                  "countryISOCode",
                  "countryISOCode desc",
                  "postcode",
                  "postcode desc",
                  "addressStreet",
                  "addressStreet desc",
                  "houseNumberMain",
                  "houseNumberMain desc",
                  "boxMain",
                  "boxMain desc",
                  "address1",
                  "address1 desc",
                  "address2",
                  "address2 desc",
                  "city",
                  "city desc",
                  "language",
                  "language desc",
                  "phoneNo",
                  "phoneNo desc",
                  "mobilePhoneNo",
                  "mobilePhoneNo desc",
                  "customerNo",
                  "customerNo desc",
                  "vatRegistrationNo",
                  "vatRegistrationNo desc",
                  "companyName",
                  "companyName desc",
                  "emailFinance",
                  "emailFinance desc",
                  "defaultBillingAddress",
                  "defaultBillingAddress desc",
                  "countryISOCodeBilling",
                  "countryISOCodeBilling desc",
                  "address1Billing",
                  "address1Billing desc",
                  "address2Billing",
                  "address2Billing desc",
                  "addressStreetBilling",
                  "addressStreetBilling desc",
                  "houseNumberBilling",
                  "houseNumberBilling desc",
                  "boxBilling",
                  "boxBilling desc",
                  "postCodeBilling",
                  "postCodeBilling desc",
                  "cityBilling",
                  "cityBilling desc",
                  "vatType",
                  "vatType desc",
                  "needInvoice",
                  "needInvoice desc",
                  "dateTimeModified",
                  "dateTimeModified desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "tilroyId",
                  "name1",
                  "name2",
                  "emailCustomer",
                  "countryISOCode",
                  "postcode",
                  "addressStreet",
                  "houseNumberMain",
                  "boxMain",
                  "address1",
                  "address2",
                  "city",
                  "language",
                  "phoneNo",
                  "mobilePhoneNo",
                  "customerNo",
                  "vatRegistrationNo",
                  "companyName",
                  "emailFinance",
                  "defaultBillingAddress",
                  "countryISOCodeBilling",
                  "address1Billing",
                  "address2Billing",
                  "addressStreetBilling",
                  "houseNumberBilling",
                  "boxBilling",
                  "postCodeBilling",
                  "cityBilling",
                  "vatType",
                  "needInvoice",
                  "dateTimeModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of customer",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "customers.customer"
        ],
        "summary": "Add new entity to customers",
        "operationId": "customers.customer.CreateCustomer",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.customer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/customers({id})": {
      "get": {
        "tags": [
          "customers.customer"
        ],
        "summary": "Get entity from customers by key",
        "operationId": "customers.customer.GetCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "tilroyId",
                  "name1",
                  "name2",
                  "emailCustomer",
                  "countryISOCode",
                  "postcode",
                  "addressStreet",
                  "houseNumberMain",
                  "boxMain",
                  "address1",
                  "address2",
                  "city",
                  "language",
                  "phoneNo",
                  "mobilePhoneNo",
                  "customerNo",
                  "vatRegistrationNo",
                  "companyName",
                  "emailFinance",
                  "defaultBillingAddress",
                  "countryISOCodeBilling",
                  "address1Billing",
                  "address2Billing",
                  "addressStreetBilling",
                  "houseNumberBilling",
                  "boxBilling",
                  "postCodeBilling",
                  "cityBilling",
                  "vatType",
                  "needInvoice",
                  "dateTimeModified"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.customer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "customers.customer"
        ],
        "summary": "Update entity in customers",
        "operationId": "customers.customer.UpdateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "customers.customer"
        ],
        "summary": "Delete entity from customers",
        "operationId": "customers.customer.DeleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of customer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "customer"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documentLines": {
      "get": {
        "tags": [
          "documentLines.documentLines"
        ],
        "summary": "Get entities from documentLines",
        "operationId": "documentLines.documentLines.ListDocumentLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "description",
                  "description desc",
                  "quantity",
                  "quantity desc",
                  "unitPrice",
                  "unitPrice desc",
                  "lineAmount",
                  "lineAmount desc",
                  "lineDiscountAmount",
                  "lineDiscountAmount desc",
                  "netSalesPrice",
                  "netSalesPrice desc",
                  "shopStockNo",
                  "shopStockNo desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "shippingAgent",
                  "shippingAgent desc",
                  "collectionMethod",
                  "collectionMethod desc",
                  "tilroyLineId",
                  "tilroyLineId desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of documentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "documentLines.documentLines"
        ],
        "summary": "Add new entity to documentLines",
        "operationId": "documentLines.documentLines.CreateDocumentLines",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "documentLines.documentLines"
        ],
        "summary": "Get entity from documentLines by key",
        "operationId": "documentLines.documentLines.GetDocumentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "documentLines.documentLines"
        ],
        "summary": "Update entity in documentLines",
        "operationId": "documentLines.documentLines.UpdateDocumentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "documentLines.documentLines"
        ],
        "summary": "Delete entity from documentLines",
        "operationId": "documentLines.documentLines.DeleteDocumentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documents": {
      "get": {
        "tags": [
          "documents.document"
        ],
        "summary": "Get entities from documents",
        "operationId": "documents.document.ListDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "orderNo",
                  "orderNo desc",
                  "shopHandlingNo",
                  "shopHandlingNo desc",
                  "orderDate",
                  "orderDate desc",
                  "sellToCustomerNo",
                  "sellToCustomerNo desc",
                  "selltoName",
                  "selltoName desc",
                  "selltoName2",
                  "selltoName2 desc",
                  "selltoEmailCustomer",
                  "selltoEmailCustomer desc",
                  "selltoAddress",
                  "selltoAddress desc",
                  "selltoAddress2",
                  "selltoAddress2 desc",
                  "selltoHouseNumber",
                  "selltoHouseNumber desc",
                  "selltoBox",
                  "selltoBox desc",
                  "selltoPostCode",
                  "selltoPostCode desc",
                  "selltoCity",
                  "selltoCity desc",
                  "selltoCounty",
                  "selltoCounty desc",
                  "selltoCountryRegion",
                  "selltoCountryRegion desc",
                  "selltoPhoneNo",
                  "selltoPhoneNo desc",
                  "selltoMobilePhoneNo",
                  "selltoMobilePhoneNo desc",
                  "selltoContact",
                  "selltoContact desc",
                  "billtoVATRegNo",
                  "billtoVATRegNo desc",
                  "inclVAT",
                  "inclVAT desc",
                  "posTotalAmountDiscount",
                  "posTotalAmountDiscount desc",
                  "posTotalAmountExclVat",
                  "posTotalAmountExclVat desc",
                  "posTotalAmountInclVat",
                  "posTotalAmountInclVat desc",
                  "posTotalAmountVat",
                  "posTotalAmountVat desc",
                  "shiptoName",
                  "shiptoName desc",
                  "shiptoName2",
                  "shiptoName2 desc",
                  "shiptoAddress",
                  "shiptoAddress desc",
                  "shiptoAddress2",
                  "shiptoAddress2 desc",
                  "shiptoHouseNumber",
                  "shiptoHouseNumber desc",
                  "shiptoBox",
                  "shiptoBox desc",
                  "shiptoPostCode",
                  "shiptoPostCode desc",
                  "shiptoCity",
                  "shiptoCity desc",
                  "shiptoCounty",
                  "shiptoCounty desc",
                  "shiptoCountryRegionCode",
                  "shiptoCountryRegionCode desc",
                  "shiptoEmail",
                  "shiptoEmail desc",
                  "shiptoPhoneNo",
                  "shiptoPhoneNo desc",
                  "shiptoContact",
                  "shiptoContact desc",
                  "documentType",
                  "documentType desc",
                  "services",
                  "services desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "orderNo",
                  "shopHandlingNo",
                  "orderDate",
                  "sellToCustomerNo",
                  "selltoName",
                  "selltoName2",
                  "selltoEmailCustomer",
                  "selltoAddress",
                  "selltoAddress2",
                  "selltoHouseNumber",
                  "selltoBox",
                  "selltoPostCode",
                  "selltoCity",
                  "selltoCounty",
                  "selltoCountryRegion",
                  "selltoPhoneNo",
                  "selltoMobilePhoneNo",
                  "selltoContact",
                  "billtoVATRegNo",
                  "inclVAT",
                  "posTotalAmountDiscount",
                  "posTotalAmountExclVat",
                  "posTotalAmountInclVat",
                  "posTotalAmountVat",
                  "shiptoName",
                  "shiptoName2",
                  "shiptoAddress",
                  "shiptoAddress2",
                  "shiptoHouseNumber",
                  "shiptoBox",
                  "shiptoPostCode",
                  "shiptoCity",
                  "shiptoCounty",
                  "shiptoCountryRegionCode",
                  "shiptoEmail",
                  "shiptoPhoneNo",
                  "shiptoContact",
                  "documentType",
                  "services",
                  "dateTimeModifiedPTE",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of document",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.document"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "documents.document"
        ],
        "summary": "Add new entity to documents",
        "operationId": "documents.document.CreateDocument",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.document"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documents({id})": {
      "get": {
        "tags": [
          "documents.document"
        ],
        "summary": "Get entity from documents by key",
        "operationId": "documents.document.GetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "orderNo",
                  "shopHandlingNo",
                  "orderDate",
                  "sellToCustomerNo",
                  "selltoName",
                  "selltoName2",
                  "selltoEmailCustomer",
                  "selltoAddress",
                  "selltoAddress2",
                  "selltoHouseNumber",
                  "selltoBox",
                  "selltoPostCode",
                  "selltoCity",
                  "selltoCounty",
                  "selltoCountryRegion",
                  "selltoPhoneNo",
                  "selltoMobilePhoneNo",
                  "selltoContact",
                  "billtoVATRegNo",
                  "inclVAT",
                  "posTotalAmountDiscount",
                  "posTotalAmountExclVat",
                  "posTotalAmountInclVat",
                  "posTotalAmountVat",
                  "shiptoName",
                  "shiptoName2",
                  "shiptoAddress",
                  "shiptoAddress2",
                  "shiptoHouseNumber",
                  "shiptoBox",
                  "shiptoPostCode",
                  "shiptoCity",
                  "shiptoCounty",
                  "shiptoCountryRegionCode",
                  "shiptoEmail",
                  "shiptoPhoneNo",
                  "shiptoContact",
                  "documentType",
                  "services",
                  "dateTimeModifiedPTE",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "documentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.document"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "documents.document"
        ],
        "summary": "Update entity in documents",
        "operationId": "documents.document.UpdateDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "documents.document"
        ],
        "summary": "Delete entity from documents",
        "operationId": "documents.document.DeleteDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documents({id})/documentLines": {
      "get": {
        "tags": [
          "documents.documentLines"
        ],
        "summary": "Get documentLines from documents",
        "operationId": "documents.ListDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "description",
                  "description desc",
                  "quantity",
                  "quantity desc",
                  "unitPrice",
                  "unitPrice desc",
                  "lineAmount",
                  "lineAmount desc",
                  "lineDiscountAmount",
                  "lineDiscountAmount desc",
                  "netSalesPrice",
                  "netSalesPrice desc",
                  "shopStockNo",
                  "shopStockNo desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "shippingAgent",
                  "shippingAgent desc",
                  "collectionMethod",
                  "collectionMethod desc",
                  "tilroyLineId",
                  "tilroyLineId desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of documentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "documents.documentLines"
        ],
        "summary": "Create new navigation property to documentLines for documents",
        "operationId": "documents.CreateDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/documents({id})/documentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "documents.documentLines"
        ],
        "summary": "Get documentLines from documents",
        "operationId": "documents.GetDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "itemNo",
                  "description",
                  "quantity",
                  "unitPrice",
                  "lineAmount",
                  "lineDiscountAmount",
                  "netSalesPrice",
                  "shopStockNo",
                  "deliveryDate",
                  "shippingAgent",
                  "collectionMethod",
                  "tilroyLineId",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "documents.documentLines"
        ],
        "summary": "Update the navigation property documentLines in documents",
        "operationId": "documents.UpdateDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "documents.documentLines"
        ],
        "summary": "Delete navigation property documentLines for documents",
        "operationId": "documents.DeleteDocumentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of document",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "document"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of documentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of documentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "documentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/entityDefinitions": {
      "get": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Get entities from entityDefinitions",
        "operationId": "entityDefinitions.entityMetadata.ListEntityMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entityName",
                  "entityName desc",
                  "entitySetName",
                  "entitySetName desc",
                  "entityCaptions",
                  "entityCaptions desc",
                  "entitySetCaptions",
                  "entitySetCaptions desc",
                  "properties",
                  "properties desc",
                  "actions",
                  "actions desc",
                  "enumMembers",
                  "enumMembers desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entityName",
                  "entitySetName",
                  "entityCaptions",
                  "entitySetCaptions",
                  "properties",
                  "actions",
                  "enumMembers"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of entityMetadata",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Add new entity to entityDefinitions",
        "operationId": "entityDefinitions.entityMetadata.CreateEntityMetadata",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/entityDefinitions({entityName})": {
      "get": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Get entity from entityDefinitions by key",
        "operationId": "entityDefinitions.entityMetadata.GetEntityMetadata",
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "description": "key: entityName of entityMetadata",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "entityMetadata"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entityName",
                  "entitySetName",
                  "entityCaptions",
                  "entitySetCaptions",
                  "properties",
                  "actions",
                  "enumMembers"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Update entity in entityDefinitions",
        "operationId": "entityDefinitions.entityMetadata.UpdateEntityMetadata",
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "description": "key: entityName of entityMetadata",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "entityMetadata"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.entityMetadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "entityDefinitions.entityMetadata"
        ],
        "summary": "Delete entity from entityDefinitions",
        "operationId": "entityDefinitions.entityMetadata.DeleteEntityMetadata",
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "description": "key: entityName of entityMetadata",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "entityMetadata"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/inventoryStatus": {
      "get": {
        "tags": [
          "inventoryStatus.inventoryStatus"
        ],
        "summary": "Get entities from inventoryStatus",
        "operationId": "inventoryStatus.inventoryStatus.ListInventoryStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "location desc",
                  "item",
                  "item desc",
                  "itemVariant",
                  "itemVariant desc",
                  "locationType",
                  "locationType desc",
                  "availableStock",
                  "availableStock desc",
                  "availableReservedStock",
                  "availableReservedStock desc",
                  "expectedStock",
                  "expectedStock desc",
                  "expectedReservedStock",
                  "expectedReservedStock desc",
                  "expectedDate",
                  "expectedDate desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "datetimeRegistered",
                  "datetimeRegistered desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "item",
                  "itemVariant",
                  "locationType",
                  "availableStock",
                  "availableReservedStock",
                  "expectedStock",
                  "expectedReservedStock",
                  "expectedDate",
                  "unitOfMeasure",
                  "datetimeRegistered",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of inventoryStatus",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventoryStatus(location={location},item={item},itemVariant={itemVariant})": {
      "get": {
        "tags": [
          "inventoryStatus.inventoryStatus"
        ],
        "summary": "Get entity from inventoryStatus by key",
        "operationId": "inventoryStatus.inventoryStatus.GetInventoryStatus",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "location",
                  "item",
                  "itemVariant",
                  "locationType",
                  "availableStock",
                  "availableReservedStock",
                  "expectedStock",
                  "expectedReservedStock",
                  "expectedDate",
                  "unitOfMeasure",
                  "datetimeRegistered",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/inventoryStatus(location={location},item={item},itemVariant={itemVariant})/item3PL": {
      "get": {
        "tags": [
          "inventoryStatus.item3PL"
        ],
        "summary": "Get item3PL from inventoryStatus",
        "operationId": "inventoryStatus.GetItem3PL",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "inventoryStatus.item3PL"
        ],
        "summary": "Update the navigation property item3PL in inventoryStatus",
        "operationId": "inventoryStatus.UpdateItem3PL",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "inventoryStatus.item3PL"
        ],
        "summary": "Delete navigation property item3PL for inventoryStatus",
        "operationId": "inventoryStatus.DeleteItem3PL",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "key: location of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "item",
            "in": "path",
            "description": "key: item of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "itemVariant",
            "in": "path",
            "description": "key: itemVariant of inventoryStatus",
            "required": true,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "x-ms-docs-key-type": "inventoryStatus"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/items3PL": {
      "get": {
        "tags": [
          "items3PL.item3PL"
        ],
        "summary": "Get entities from items3PL",
        "operationId": "items3PL.item3PL.ListItem3PL",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "itemNo",
                  "itemNo desc",
                  "vendorItemNo",
                  "vendorItemNo desc",
                  "description",
                  "description desc",
                  "searchDescription",
                  "searchDescription desc",
                  "baseUnitofMeasure",
                  "baseUnitofMeasure desc",
                  "vendorNo",
                  "vendorNo desc",
                  "countryRegionofOriginCode",
                  "countryRegionofOriginCode desc",
                  "countryRegionPurchasedCode",
                  "countryRegionPurchasedCode desc",
                  "itemCategoryCode",
                  "itemCategoryCode desc",
                  "barCodeInnerBox",
                  "barCodeInnerBox desc",
                  "grossWeight",
                  "grossWeight desc",
                  "netWeight",
                  "netWeight desc",
                  "productCategory",
                  "productCategory desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of item3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/items3PL({id})": {
      "get": {
        "tags": [
          "items3PL.item3PL"
        ],
        "summary": "Get entity from items3PL by key",
        "operationId": "items3PL.item3PL.GetItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/items3PL({id})/itemUoMs": {
      "get": {
        "tags": [
          "items3PL.itemUoM"
        ],
        "summary": "Get itemUoMs from items3PL",
        "operationId": "items3PL.ListItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "codeUoM",
                  "codeUoM desc",
                  "uomDetails",
                  "uomDetails desc",
                  "minPickUoM",
                  "minPickUoM desc",
                  "qtyperUoM",
                  "qtyperUoM desc",
                  "lengthUoM",
                  "lengthUoM desc",
                  "widthUoM",
                  "widthUoM desc",
                  "heightUoM",
                  "heightUoM desc",
                  "referenceNo",
                  "referenceNo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of itemUoM",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "items3PL.itemUoM"
        ],
        "summary": "Create new navigation property to itemUoMs for items3PL",
        "operationId": "items3PL.CreateItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/items3PL({id})/itemUoMs({id1})": {
      "get": {
        "tags": [
          "items3PL.itemUoM"
        ],
        "summary": "Get itemUoMs from items3PL",
        "operationId": "items3PL.GetItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "items3PL.itemUoM"
        ],
        "summary": "Update the navigation property itemUoMs in items3PL",
        "operationId": "items3PL.UpdateItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "items3PL.itemUoM"
        ],
        "summary": "Delete navigation property itemUoMs for items3PL",
        "operationId": "items3PL.DeleteItemUoMs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of item3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "item3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/itemUoMs": {
      "get": {
        "tags": [
          "itemUoMs.itemUoM"
        ],
        "summary": "Get entities from itemUoMs",
        "operationId": "itemUoMs.itemUoM.ListItemUoM",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "codeUoM",
                  "codeUoM desc",
                  "uomDetails",
                  "uomDetails desc",
                  "minPickUoM",
                  "minPickUoM desc",
                  "qtyperUoM",
                  "qtyperUoM desc",
                  "lengthUoM",
                  "lengthUoM desc",
                  "widthUoM",
                  "widthUoM desc",
                  "heightUoM",
                  "heightUoM desc",
                  "referenceNo",
                  "referenceNo desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of itemUoM",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/itemUoMs({id})": {
      "get": {
        "tags": [
          "itemUoMs.itemUoM"
        ],
        "summary": "Get entity from itemUoMs by key",
        "operationId": "itemUoMs.itemUoM.GetItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of itemUoM",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "itemUoM"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/receiptLines3PL": {
      "get": {
        "tags": [
          "receiptLines3PL.receiptLine3PL"
        ],
        "summary": "Get entities from receiptLines3PL",
        "operationId": "receiptLines3PL.receiptLine3PL.ListReceiptLine3PL",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "itemNo",
                  "itemNo desc",
                  "itemDescription",
                  "itemDescription desc",
                  "qty",
                  "qty desc",
                  "qtyRejected",
                  "qtyRejected desc",
                  "reasonCode",
                  "reasonCode desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of receiptLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/receiptLines3PL({id})": {
      "get": {
        "tags": [
          "receiptLines3PL.receiptLine3PL"
        ],
        "summary": "Get entity from receiptLines3PL by key",
        "operationId": "receiptLines3PL.receiptLine3PL.GetReceiptLine3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/receiptLines3PL({id})/item3PL": {
      "get": {
        "tags": [
          "receiptLines3PL.item3PL"
        ],
        "summary": "Get item3PL from receiptLines3PL",
        "operationId": "receiptLines3PL.GetItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "receiptLines3PL.item3PL"
        ],
        "summary": "Update the navigation property item3PL in receiptLines3PL",
        "operationId": "receiptLines3PL.UpdateItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "receiptLines3PL.item3PL"
        ],
        "summary": "Delete navigation property item3PL for receiptLines3PL",
        "operationId": "receiptLines3PL.DeleteItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/receipts3PL": {
      "get": {
        "tags": [
          "receipts3PL.receipt3PL"
        ],
        "summary": "Get entities from receipts3PL",
        "operationId": "receipts3PL.receipt3PL.ListReceipt3PL",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "transportType",
                  "transportType desc",
                  "referenceNo",
                  "referenceNo desc",
                  "originalShipmentNo",
                  "originalShipmentNo desc",
                  "grossWeight",
                  "grossWeight desc",
                  "cubage",
                  "cubage desc",
                  "containerSize",
                  "containerSize desc",
                  "vendorNo",
                  "vendorNo desc",
                  "returnAddress",
                  "returnAddress desc",
                  "returnAddress2",
                  "returnAddress2 desc",
                  "returnCity",
                  "returnCity desc",
                  "returnPostCode",
                  "returnPostCode desc",
                  "returnCountry",
                  "returnCountry desc",
                  "warehouseReceiptDate",
                  "warehouseReceiptDate desc",
                  "comment",
                  "comment desc",
                  "location",
                  "location desc",
                  "createModify",
                  "createModify desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "transportType",
                  "referenceNo",
                  "originalShipmentNo",
                  "grossWeight",
                  "cubage",
                  "containerSize",
                  "vendorNo",
                  "returnAddress",
                  "returnAddress2",
                  "returnCity",
                  "returnPostCode",
                  "returnCountry",
                  "warehouseReceiptDate",
                  "comment",
                  "location",
                  "createModify",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of receipt3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/receipts3PL({id})": {
      "get": {
        "tags": [
          "receipts3PL.receipt3PL"
        ],
        "summary": "Get entity from receipts3PL by key",
        "operationId": "receipts3PL.receipt3PL.GetReceipt3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "transportType",
                  "referenceNo",
                  "originalShipmentNo",
                  "grossWeight",
                  "cubage",
                  "containerSize",
                  "vendorNo",
                  "returnAddress",
                  "returnAddress2",
                  "returnCity",
                  "returnPostCode",
                  "returnCountry",
                  "warehouseReceiptDate",
                  "comment",
                  "location",
                  "createModify",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "receiptLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/receipts3PL({id})/receiptLines3PL": {
      "get": {
        "tags": [
          "receipts3PL.receiptLine3PL"
        ],
        "summary": "Get receiptLines3PL from receipts3PL",
        "operationId": "receipts3PL.ListReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "itemNo",
                  "itemNo desc",
                  "itemDescription",
                  "itemDescription desc",
                  "qty",
                  "qty desc",
                  "qtyRejected",
                  "qtyRejected desc",
                  "reasonCode",
                  "reasonCode desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of receiptLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "receipts3PL.receiptLine3PL"
        ],
        "summary": "Create new navigation property to receiptLines3PL for receipts3PL",
        "operationId": "receipts3PL.CreateReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/receipts3PL({id})/receiptLines3PL({id1})": {
      "get": {
        "tags": [
          "receipts3PL.receiptLine3PL"
        ],
        "summary": "Get receiptLines3PL from receipts3PL",
        "operationId": "receipts3PL.GetReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "itemDescription",
                  "qty",
                  "qtyRejected",
                  "reasonCode",
                  "unitOfMeasure",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "receipts3PL.receiptLine3PL"
        ],
        "summary": "Update the navigation property receiptLines3PL in receipts3PL",
        "operationId": "receipts3PL.UpdateReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "receipts3PL.receiptLine3PL"
        ],
        "summary": "Delete navigation property receiptLines3PL for receipts3PL",
        "operationId": "receipts3PL.DeleteReceiptLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of receipt3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receipt3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of receiptLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "receiptLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/salesPrices": {
      "get": {
        "tags": [
          "salesPrices.salesPrice"
        ],
        "summary": "Get entities from salesPrices",
        "operationId": "salesPrices.salesPrice.ListSalesPrice",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "salesCode",
                  "salesCode desc",
                  "itemNo",
                  "itemNo desc",
                  "unitofMeasureCode",
                  "unitofMeasureCode desc",
                  "unitPrice",
                  "unitPrice desc",
                  "minimumQuantity",
                  "minimumQuantity desc",
                  "startingDate",
                  "startingDate desc",
                  "endingDate",
                  "endingDate desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "salesCode",
                  "itemNo",
                  "unitofMeasureCode",
                  "unitPrice",
                  "minimumQuantity",
                  "startingDate",
                  "endingDate",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of salesPrice",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/salesPrices({id})": {
      "get": {
        "tags": [
          "salesPrices.salesPrice"
        ],
        "summary": "Get entity from salesPrices by key",
        "operationId": "salesPrices.salesPrice.GetSalesPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "salesCode",
                  "itemNo",
                  "unitofMeasureCode",
                  "unitPrice",
                  "minimumQuantity",
                  "startingDate",
                  "endingDate",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/salesPrices({id})/item3PL": {
      "get": {
        "tags": [
          "salesPrices.item3PL"
        ],
        "summary": "Get item3PL from salesPrices",
        "operationId": "salesPrices.GetItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "salesPrices.item3PL"
        ],
        "summary": "Update the navigation property item3PL in salesPrices",
        "operationId": "salesPrices.UpdateItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "salesPrices.item3PL"
        ],
        "summary": "Delete navigation property item3PL for salesPrices",
        "operationId": "salesPrices.DeleteItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/salesPrices({id})/itemUoM": {
      "get": {
        "tags": [
          "salesPrices.itemUoM"
        ],
        "summary": "Get itemUoM from salesPrices",
        "operationId": "salesPrices.GetItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "salesPrices.itemUoM"
        ],
        "summary": "Update the navigation property itemUoM in salesPrices",
        "operationId": "salesPrices.UpdateItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "salesPrices.itemUoM"
        ],
        "summary": "Delete navigation property itemUoM for salesPrices",
        "operationId": "salesPrices.DeleteItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of salesPrice",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "salesPrice"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipmentLines3PL": {
      "get": {
        "tags": [
          "shipmentLines3PL.shipmentLine3PL"
        ],
        "summary": "Get entities from shipmentLines3PL",
        "operationId": "shipmentLines3PL.shipmentLine3PL.ListShipmentLine3PL",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "grossWeight",
                  "grossWeight desc",
                  "netWeight",
                  "netWeight desc",
                  "tareWeight",
                  "tareWeight desc",
                  "cubage",
                  "cubage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of shipmentLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shipmentLines3PL({id})": {
      "get": {
        "tags": [
          "shipmentLines3PL.shipmentLine3PL"
        ],
        "summary": "Get entity from shipmentLines3PL by key",
        "operationId": "shipmentLines3PL.shipmentLine3PL.GetShipmentLine3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipmentLines3PL({id})/item3PL": {
      "get": {
        "tags": [
          "shipmentLines3PL.item3PL"
        ],
        "summary": "Get item3PL from shipmentLines3PL",
        "operationId": "shipmentLines3PL.GetItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "itemNo",
                  "vendorItemNo",
                  "description",
                  "searchDescription",
                  "baseUnitofMeasure",
                  "vendorNo",
                  "countryRegionofOriginCode",
                  "countryRegionPurchasedCode",
                  "itemCategoryCode",
                  "barCodeInnerBox",
                  "grossWeight",
                  "netWeight",
                  "productCategory",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "itemUoMs"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "shipmentLines3PL.item3PL"
        ],
        "summary": "Update the navigation property item3PL in shipmentLines3PL",
        "operationId": "shipmentLines3PL.UpdateItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "shipmentLines3PL.item3PL"
        ],
        "summary": "Delete navigation property item3PL for shipmentLines3PL",
        "operationId": "shipmentLines3PL.DeleteItem3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipmentLines3PL({id})/itemUoM": {
      "get": {
        "tags": [
          "shipmentLines3PL.itemUoM"
        ],
        "summary": "Get itemUoM from shipmentLines3PL",
        "operationId": "shipmentLines3PL.GetItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "codeUoM",
                  "uomDetails",
                  "minPickUoM",
                  "qtyperUoM",
                  "lengthUoM",
                  "widthUoM",
                  "heightUoM",
                  "referenceNo"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "shipmentLines3PL.itemUoM"
        ],
        "summary": "Update the navigation property itemUoM in shipmentLines3PL",
        "operationId": "shipmentLines3PL.UpdateItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "shipmentLines3PL.itemUoM"
        ],
        "summary": "Delete navigation property itemUoM for shipmentLines3PL",
        "operationId": "shipmentLines3PL.DeleteItemUoM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipments3PL": {
      "get": {
        "tags": [
          "shipments3PL.shipment3PL"
        ],
        "summary": "Get entities from shipments3PL",
        "operationId": "shipments3PL.shipment3PL.ListShipment3PL",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "location",
                  "location desc",
                  "no",
                  "no desc",
                  "deliveryTypeCode",
                  "deliveryTypeCode desc",
                  "shipmentDate",
                  "shipmentDate desc",
                  "shippingAgentCode",
                  "shippingAgentCode desc",
                  "shippingAgentName",
                  "shippingAgentName desc",
                  "shipToAddressCode",
                  "shipToAddressCode desc",
                  "shipToName",
                  "shipToName desc",
                  "shipToStreet",
                  "shipToStreet desc",
                  "shipToBox",
                  "shipToBox desc",
                  "shipToHousenumber",
                  "shipToHousenumber desc",
                  "shipToAddressCity",
                  "shipToAddressCity desc",
                  "shipToAddressPostCode",
                  "shipToAddressPostCode desc",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryCode desc",
                  "shipToAddressCountryName",
                  "shipToAddressCountryName desc",
                  "sellToaddressEmail",
                  "sellToaddressEmail desc",
                  "languageCode",
                  "languageCode desc",
                  "comment",
                  "comment desc",
                  "name",
                  "name desc",
                  "grossWeight",
                  "grossWeight desc",
                  "cubage",
                  "cubage desc",
                  "orderNo",
                  "orderNo desc",
                  "routeCode",
                  "routeCode desc",
                  "sequenceNo",
                  "sequenceNo desc",
                  "createModify",
                  "createModify desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "location",
                  "no",
                  "deliveryTypeCode",
                  "shipmentDate",
                  "shippingAgentCode",
                  "shippingAgentName",
                  "shipToAddressCode",
                  "shipToName",
                  "shipToStreet",
                  "shipToBox",
                  "shipToHousenumber",
                  "shipToAddressCity",
                  "shipToAddressPostCode",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryName",
                  "sellToaddressEmail",
                  "languageCode",
                  "comment",
                  "name",
                  "grossWeight",
                  "cubage",
                  "orderNo",
                  "routeCode",
                  "sequenceNo",
                  "createModify",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of shipment3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/shipments3PL({id})": {
      "get": {
        "tags": [
          "shipments3PL.shipment3PL"
        ],
        "summary": "Get entity from shipments3PL by key",
        "operationId": "shipments3PL.shipment3PL.GetShipment3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "location",
                  "no",
                  "deliveryTypeCode",
                  "shipmentDate",
                  "shippingAgentCode",
                  "shippingAgentName",
                  "shipToAddressCode",
                  "shipToName",
                  "shipToStreet",
                  "shipToBox",
                  "shipToHousenumber",
                  "shipToAddressCity",
                  "shipToAddressPostCode",
                  "shipToAddressCountryCode",
                  "shipToAddressCountryName",
                  "sellToaddressEmail",
                  "languageCode",
                  "comment",
                  "name",
                  "grossWeight",
                  "cubage",
                  "orderNo",
                  "routeCode",
                  "sequenceNo",
                  "createModify",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "shipmentLines3PL"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipments3PL({id})/shipmentLines3PL": {
      "get": {
        "tags": [
          "shipments3PL.shipmentLine3PL"
        ],
        "summary": "Get shipmentLines3PL from shipments3PL",
        "operationId": "shipments3PL.ListShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "lineNo",
                  "lineNo desc",
                  "itemNo",
                  "itemNo desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "grossWeight",
                  "grossWeight desc",
                  "netWeight",
                  "netWeight desc",
                  "tareWeight",
                  "tareWeight desc",
                  "cubage",
                  "cubage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of shipmentLine3PL",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "shipments3PL.shipmentLine3PL"
        ],
        "summary": "Create new navigation property to shipmentLines3PL for shipments3PL",
        "operationId": "shipments3PL.CreateShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shipments3PL({id})/shipmentLines3PL({id1})": {
      "get": {
        "tags": [
          "shipments3PL.shipmentLine3PL"
        ],
        "summary": "Get shipmentLines3PL from shipments3PL",
        "operationId": "shipments3PL.GetShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "lineNo",
                  "itemNo",
                  "quantity",
                  "unitOfMeasure",
                  "grossWeight",
                  "netWeight",
                  "tareWeight",
                  "cubage",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "item3PL",
                  "itemUoM"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "shipments3PL.shipmentLine3PL"
        ],
        "summary": "Update the navigation property shipmentLines3PL in shipments3PL",
        "operationId": "shipments3PL.UpdateShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "shipments3PL.shipmentLine3PL"
        ],
        "summary": "Delete navigation property shipmentLines3PL for shipments3PL",
        "operationId": "shipments3PL.DeleteShipmentLines3PL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of shipment3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipment3PL"
          },
          {
            "name": "id1",
            "in": "path",
            "description": "key: id of shipmentLine3PL",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "shipmentLine3PL"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/statusParcelServices": {
      "get": {
        "tags": [
          "statusParcelServices.statusParcelService"
        ],
        "summary": "Get entities from statusParcelServices",
        "operationId": "statusParcelServices.statusParcelService.ListStatusParcelService",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "trackingNo",
                  "trackingNo desc",
                  "trackingStatus",
                  "trackingStatus desc",
                  "returnMessage",
                  "returnMessage desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "trackingNo",
                  "trackingStatus",
                  "returnMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of statusParcelService",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "statusParcelServices.statusParcelService"
        ],
        "summary": "Add new entity to statusParcelServices",
        "operationId": "statusParcelServices.statusParcelService.CreateStatusParcelService",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/statusParcelServices({id})": {
      "get": {
        "tags": [
          "statusParcelServices.statusParcelService"
        ],
        "summary": "Get entity from statusParcelServices by key",
        "operationId": "statusParcelServices.statusParcelService.GetStatusParcelService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of statusParcelService",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "statusParcelService"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "trackingNo",
                  "trackingStatus",
                  "returnMessage"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockCorrectionLines": {
      "get": {
        "tags": [
          "stockCorrectionLines.stockCorrectionLines"
        ],
        "summary": "Get entities from stockCorrectionLines",
        "operationId": "stockCorrectionLines.stockCorrectionLines.ListStockCorrectionLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockCorrectionLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "stockCorrectionLines.stockCorrectionLines"
        ],
        "summary": "Add new entity to stockCorrectionLines",
        "operationId": "stockCorrectionLines.stockCorrectionLines.CreateStockCorrectionLines",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockCorrectionLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "stockCorrectionLines.stockCorrectionLines"
        ],
        "summary": "Get entity from stockCorrectionLines by key",
        "operationId": "stockCorrectionLines.stockCorrectionLines.GetStockCorrectionLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockCorrectionLines.stockCorrectionLines"
        ],
        "summary": "Update entity in stockCorrectionLines",
        "operationId": "stockCorrectionLines.stockCorrectionLines.UpdateStockCorrectionLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockCorrectionLines.stockCorrectionLines"
        ],
        "summary": "Delete entity from stockCorrectionLines",
        "operationId": "stockCorrectionLines.stockCorrectionLines.DeleteStockCorrectionLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockcorrections": {
      "get": {
        "tags": [
          "stockcorrections.stockcorrection"
        ],
        "summary": "Get entities from stockcorrections",
        "operationId": "stockcorrections.stockcorrection.ListStockcorrection",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "orderDate",
                  "orderDate desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockcorrection",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "stockcorrections.stockcorrection"
        ],
        "summary": "Add new entity to stockcorrections",
        "operationId": "stockcorrections.stockcorrection.CreateStockcorrection",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockcorrections({id})": {
      "get": {
        "tags": [
          "stockcorrections.stockcorrection"
        ],
        "summary": "Get entity from stockcorrections by key",
        "operationId": "stockcorrections.stockcorrection.GetStockcorrection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockCorrectionLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockcorrections.stockcorrection"
        ],
        "summary": "Update entity in stockcorrections",
        "operationId": "stockcorrections.stockcorrection.UpdateStockcorrection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockcorrections.stockcorrection"
        ],
        "summary": "Delete entity from stockcorrections",
        "operationId": "stockcorrections.stockcorrection.DeleteStockcorrection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockcorrections({id})/stockCorrectionLines": {
      "get": {
        "tags": [
          "stockcorrections.stockCorrectionLines"
        ],
        "summary": "Get stockCorrectionLines from stockcorrections",
        "operationId": "stockcorrections.ListStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockCorrectionLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "stockcorrections.stockCorrectionLines"
        ],
        "summary": "Create new navigation property to stockCorrectionLines for stockcorrections",
        "operationId": "stockcorrections.CreateStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockcorrections({id})/stockCorrectionLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "stockcorrections.stockCorrectionLines"
        ],
        "summary": "Get stockCorrectionLines from stockcorrections",
        "operationId": "stockcorrections.GetStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockcorrections.stockCorrectionLines"
        ],
        "summary": "Update the navigation property stockCorrectionLines in stockcorrections",
        "operationId": "stockcorrections.UpdateStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockcorrections.stockCorrectionLines"
        ],
        "summary": "Delete navigation property stockCorrectionLines for stockcorrections",
        "operationId": "stockcorrections.DeleteStockCorrectionLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockcorrection",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockcorrection"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockCorrectionLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockCorrectionLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockOverviewLines": {
      "get": {
        "tags": [
          "stockOverviewLines.stockOverviewLines"
        ],
        "summary": "Get entities from stockOverviewLines",
        "operationId": "stockOverviewLines.stockOverviewLines.ListStockOverviewLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockOverviewLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "stockOverviewLines.stockOverviewLines"
        ],
        "summary": "Add new entity to stockOverviewLines",
        "operationId": "stockOverviewLines.stockOverviewLines.CreateStockOverviewLines",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockOverviewLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "stockOverviewLines.stockOverviewLines"
        ],
        "summary": "Get entity from stockOverviewLines by key",
        "operationId": "stockOverviewLines.stockOverviewLines.GetStockOverviewLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockOverviewLines.stockOverviewLines"
        ],
        "summary": "Update entity in stockOverviewLines",
        "operationId": "stockOverviewLines.stockOverviewLines.UpdateStockOverviewLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockOverviewLines.stockOverviewLines"
        ],
        "summary": "Delete entity from stockOverviewLines",
        "operationId": "stockOverviewLines.stockOverviewLines.DeleteStockOverviewLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockoverviews": {
      "get": {
        "tags": [
          "stockoverviews.stockoverview"
        ],
        "summary": "Get entities from stockoverviews",
        "operationId": "stockoverviews.stockoverview.ListStockoverview",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "orderDate",
                  "orderDate desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockoverview",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "stockoverviews.stockoverview"
        ],
        "summary": "Add new entity to stockoverviews",
        "operationId": "stockoverviews.stockoverview.CreateStockoverview",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockoverviews({id})": {
      "get": {
        "tags": [
          "stockoverviews.stockoverview"
        ],
        "summary": "Get entity from stockoverviews by key",
        "operationId": "stockoverviews.stockoverview.GetStockoverview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "orderDate",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "stockOverviewLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockoverviews.stockoverview"
        ],
        "summary": "Update entity in stockoverviews",
        "operationId": "stockoverviews.stockoverview.UpdateStockoverview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockoverviews.stockoverview"
        ],
        "summary": "Delete entity from stockoverviews",
        "operationId": "stockoverviews.stockoverview.DeleteStockoverview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockoverviews({id})/stockOverviewLines": {
      "get": {
        "tags": [
          "stockoverviews.stockOverviewLines"
        ],
        "summary": "Get stockOverviewLines from stockoverviews",
        "operationId": "stockoverviews.ListStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of stockOverviewLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "stockoverviews.stockOverviewLines"
        ],
        "summary": "Create new navigation property to stockOverviewLines for stockoverviews",
        "operationId": "stockoverviews.CreateStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/stockoverviews({id})/stockOverviewLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "stockoverviews.stockOverviewLines"
        ],
        "summary": "Get stockOverviewLines from stockoverviews",
        "operationId": "stockoverviews.GetStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "stockoverviews.stockOverviewLines"
        ],
        "summary": "Update the navigation property stockOverviewLines in stockoverviews",
        "operationId": "stockoverviews.UpdateStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "stockoverviews.stockOverviewLines"
        ],
        "summary": "Delete navigation property stockOverviewLines for stockoverviews",
        "operationId": "stockoverviews.DeleteStockOverviewLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of stockoverview",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "stockoverview"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of stockOverviewLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of stockOverviewLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "stockOverviewLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "subscriptions.subscriptions.ListSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "subscriptionId",
                  "subscriptionId desc",
                  "notificationUrl",
                  "notificationUrl desc",
                  "resource",
                  "resource desc",
                  "userId",
                  "userId desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "clientState",
                  "clientState desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "systemCreatedAt",
                  "systemCreatedAt desc",
                  "systemCreatedBy",
                  "systemCreatedBy desc",
                  "systemModifiedAt",
                  "systemModifiedAt desc",
                  "systemModifiedBy",
                  "systemModifiedBy desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "subscriptionId",
                  "notificationUrl",
                  "resource",
                  "userId",
                  "lastModifiedDateTime",
                  "clientState",
                  "expirationDateTime",
                  "systemCreatedAt",
                  "systemCreatedBy",
                  "systemModifiedAt",
                  "systemModifiedBy"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscriptions",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "subscriptions.subscriptions.CreateSubscriptions",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions({subscriptionId})": {
      "get": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "subscriptions.subscriptions.GetSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "key: subscriptionId of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "subscriptionId",
                  "notificationUrl",
                  "resource",
                  "userId",
                  "lastModifiedDateTime",
                  "clientState",
                  "expirationDateTime",
                  "systemCreatedAt",
                  "systemCreatedBy",
                  "systemModifiedAt",
                  "systemModifiedBy"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "subscriptions.subscriptions.UpdateSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "key: subscriptionId of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.subscriptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscriptions.subscriptions"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "subscriptions.subscriptions.DeleteSubscriptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "key: subscriptionId of subscriptions",
            "required": true,
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-ms-docs-key-type": "subscriptions"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseReceiptLines": {
      "get": {
        "tags": [
          "warehouseReceiptLines.warehouseReceiptLines"
        ],
        "summary": "Get entities from warehouseReceiptLines",
        "operationId": "warehouseReceiptLines.warehouseReceiptLines.ListWarehouseReceiptLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseReceiptLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "warehouseReceiptLines.warehouseReceiptLines"
        ],
        "summary": "Add new entity to warehouseReceiptLines",
        "operationId": "warehouseReceiptLines.warehouseReceiptLines.CreateWarehouseReceiptLines",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseReceiptLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "warehouseReceiptLines.warehouseReceiptLines"
        ],
        "summary": "Get entity from warehouseReceiptLines by key",
        "operationId": "warehouseReceiptLines.warehouseReceiptLines.GetWarehouseReceiptLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehouseReceiptLines.warehouseReceiptLines"
        ],
        "summary": "Update entity in warehouseReceiptLines",
        "operationId": "warehouseReceiptLines.warehouseReceiptLines.UpdateWarehouseReceiptLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehouseReceiptLines.warehouseReceiptLines"
        ],
        "summary": "Delete entity from warehouseReceiptLines",
        "operationId": "warehouseReceiptLines.warehouseReceiptLines.DeleteWarehouseReceiptLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehousereceipts": {
      "get": {
        "tags": [
          "warehousereceipts.warehousereceipt"
        ],
        "summary": "Get entities from warehousereceipts",
        "operationId": "warehousereceipts.warehousereceipt.ListWarehousereceipt",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "reference",
                  "reference desc",
                  "orginalShipmentNo",
                  "orginalShipmentNo desc",
                  "externalDocumentNo",
                  "externalDocumentNo desc",
                  "receiptDate",
                  "receiptDate desc",
                  "transportType",
                  "transportType desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "orginalShipmentNo",
                  "externalDocumentNo",
                  "receiptDate",
                  "transportType",
                  "dateTimeModifiedPTE",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehousereceipt",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "warehousereceipts.warehousereceipt"
        ],
        "summary": "Add new entity to warehousereceipts",
        "operationId": "warehousereceipts.warehousereceipt.CreateWarehousereceipt",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehousereceipts({id})": {
      "get": {
        "tags": [
          "warehousereceipts.warehousereceipt"
        ],
        "summary": "Get entity from warehousereceipts by key",
        "operationId": "warehousereceipts.warehousereceipt.GetWarehousereceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "orginalShipmentNo",
                  "externalDocumentNo",
                  "receiptDate",
                  "transportType",
                  "dateTimeModifiedPTE",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseReceiptLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehousereceipts.warehousereceipt"
        ],
        "summary": "Update entity in warehousereceipts",
        "operationId": "warehousereceipts.warehousereceipt.UpdateWarehousereceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehousereceipts.warehousereceipt"
        ],
        "summary": "Delete entity from warehousereceipts",
        "operationId": "warehousereceipts.warehousereceipt.DeleteWarehousereceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehousereceipts({id})/warehouseReceiptLines": {
      "get": {
        "tags": [
          "warehousereceipts.warehouseReceiptLines"
        ],
        "summary": "Get warehouseReceiptLines from warehousereceipts",
        "operationId": "warehousereceipts.ListWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "reasonCode",
                  "reasonCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseReceiptLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "warehousereceipts.warehouseReceiptLines"
        ],
        "summary": "Create new navigation property to warehouseReceiptLines for warehousereceipts",
        "operationId": "warehousereceipts.CreateWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehousereceipts({id})/warehouseReceiptLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "warehousereceipts.warehouseReceiptLines"
        ],
        "summary": "Get warehouseReceiptLines from warehousereceipts",
        "operationId": "warehousereceipts.GetWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "reasonCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehousereceipts.warehouseReceiptLines"
        ],
        "summary": "Update the navigation property warehouseReceiptLines in warehousereceipts",
        "operationId": "warehousereceipts.UpdateWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehousereceipts.warehouseReceiptLines"
        ],
        "summary": "Delete navigation property warehouseReceiptLines for warehousereceipts",
        "operationId": "warehousereceipts.DeleteWarehouseReceiptLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehousereceipt",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehousereceipt"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseReceiptLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseReceiptLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseShipmentLines": {
      "get": {
        "tags": [
          "warehouseShipmentLines.warehouseShipmentLines"
        ],
        "summary": "Get entities from warehouseShipmentLines",
        "operationId": "warehouseShipmentLines.warehouseShipmentLines.ListWarehouseShipmentLines",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "carrier",
                  "carrier desc",
                  "ttCode",
                  "ttCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseShipmentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "warehouseShipmentLines.warehouseShipmentLines"
        ],
        "summary": "Add new entity to warehouseShipmentLines",
        "operationId": "warehouseShipmentLines.warehouseShipmentLines.CreateWarehouseShipmentLines",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseShipmentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "warehouseShipmentLines.warehouseShipmentLines"
        ],
        "summary": "Get entity from warehouseShipmentLines by key",
        "operationId": "warehouseShipmentLines.warehouseShipmentLines.GetWarehouseShipmentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehouseShipmentLines.warehouseShipmentLines"
        ],
        "summary": "Update entity in warehouseShipmentLines",
        "operationId": "warehouseShipmentLines.warehouseShipmentLines.UpdateWarehouseShipmentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehouseShipmentLines.warehouseShipmentLines"
        ],
        "summary": "Delete entity from warehouseShipmentLines",
        "operationId": "warehouseShipmentLines.warehouseShipmentLines.DeleteWarehouseShipmentLines",
        "parameters": [
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseshipments": {
      "get": {
        "tags": [
          "warehouseshipments.warehouseshipment"
        ],
        "summary": "Get entities from warehouseshipments",
        "operationId": "warehouseshipments.warehouseshipment.ListWarehouseshipment",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "documentNo",
                  "documentNo desc",
                  "locationCode",
                  "locationCode desc",
                  "documentType",
                  "documentType desc",
                  "reference",
                  "reference desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseshipment",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "warehouseshipments.warehouseshipment"
        ],
        "summary": "Add new entity to warehouseshipments",
        "operationId": "warehouseshipments.warehouseshipment.CreateWarehouseshipment",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseshipments({id})": {
      "get": {
        "tags": [
          "warehouseshipments.warehouseshipment"
        ],
        "summary": "Get entity from warehouseshipments by key",
        "operationId": "warehouseshipments.warehouseshipment.GetWarehouseshipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "documentNo",
                  "locationCode",
                  "documentType",
                  "reference",
                  "deliveryDate",
                  "dateTimeModifiedPTE",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "warehouseShipmentLines"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehouseshipments.warehouseshipment"
        ],
        "summary": "Update entity in warehouseshipments",
        "operationId": "warehouseshipments.warehouseshipment.UpdateWarehouseshipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehouseshipments.warehouseshipment"
        ],
        "summary": "Delete entity from warehouseshipments",
        "operationId": "warehouseshipments.warehouseshipment.DeleteWarehouseshipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseshipments({id})/warehouseShipmentLines": {
      "get": {
        "tags": [
          "warehouseshipments.warehouseShipmentLines"
        ],
        "summary": "Get warehouseShipmentLines from warehouseshipments",
        "operationId": "warehouseshipments.ListWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "entryNo desc",
                  "lineNo",
                  "lineNo desc",
                  "no",
                  "no desc",
                  "quantity",
                  "quantity desc",
                  "unitOfMeasure",
                  "unitOfMeasure desc",
                  "carrier",
                  "carrier desc",
                  "ttCode",
                  "ttCode desc",
                  "dateTimeModifiedPTE",
                  "dateTimeModifiedPTE desc",
                  "status",
                  "status desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of warehouseShipmentLines",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "warehouseshipments.warehouseShipmentLines"
        ],
        "summary": "Create new navigation property to warehouseShipmentLines for warehouseshipments",
        "operationId": "warehouseshipments.CreateWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/warehouseshipments({id})/warehouseShipmentLines(entryNo={entryNo},lineNo={lineNo})": {
      "get": {
        "tags": [
          "warehouseshipments.warehouseShipmentLines"
        ],
        "summary": "Get warehouseShipmentLines from warehouseshipments",
        "operationId": "warehouseshipments.GetWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "entryNo",
                  "lineNo",
                  "no",
                  "quantity",
                  "unitOfMeasure",
                  "carrier",
                  "ttCode",
                  "dateTimeModifiedPTE",
                  "status"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "warehouseshipments.warehouseShipmentLines"
        ],
        "summary": "Update the navigation property warehouseShipmentLines in warehouseshipments",
        "operationId": "warehouseshipments.UpdateWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "warehouseshipments.warehouseShipmentLines"
        ],
        "summary": "Delete navigation property warehouseShipmentLines for warehouseshipments",
        "operationId": "warehouseshipments.DeleteWarehouseShipmentLines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id of warehouseshipment",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid"
            },
            "x-ms-docs-key-type": "warehouseshipment"
          },
          {
            "name": "entryNo",
            "in": "path",
            "description": "key: entryNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "lineNo",
            "in": "path",
            "description": "key: lineNo of warehouseShipmentLines",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "warehouseShipmentLines"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.NAV.entityMetadata": {
        "title": "entityMetadata",
        "type": "object",
        "properties": {
          "entityName": {
            "type": "string"
          },
          "entitySetName": {
            "type": "string",
            "nullable": true
          },
          "entityCaptions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
                }
              ],
              "nullable": true
            }
          },
          "entitySetCaptions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
                }
              ],
              "nullable": true
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataField"
                }
              ],
              "nullable": true
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataAction"
                }
              ],
              "nullable": true
            }
          },
          "enumMembers": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataEnumMember"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "entityName": "string (identifier)",
          "entitySetName": "string",
          "entityCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entitySetCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "properties": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataField"
            }
          ],
          "actions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataAction"
            }
          ],
          "enumMembers": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataEnumMember"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataLabel": {
        "title": "entityMetadataLabel",
        "type": "object",
        "properties": {
          "languageCode": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "caption": {
            "type": "string"
          }
        },
        "example": {
          "languageCode": "integer",
          "caption": "string"
        }
      },
      "Microsoft.NAV.entityMetadataField": {
        "title": "entityMetadataField",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "captions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "name": "string",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataAction": {
        "title": "entityMetadataAction",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "captions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "name": "string",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataEnumMember": {
        "title": "entityMetadataEnumMember",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "captions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.NAV.entityMetadataLabel"
                }
              ],
              "nullable": true
            }
          }
        },
        "example": {
          "name": "string",
          "value": "integer",
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ]
        }
      },
      "Microsoft.NAV.customer": {
        "title": "customer",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "tilroyId": {
            "maxLength": 20,
            "type": "string"
          },
          "name1": {
            "maxLength": 100,
            "type": "string"
          },
          "name2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "emailCustomer": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "countryISOCode": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "houseNumberMain": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "boxMain": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "address1": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "address2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "language": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "mobilePhoneNo": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "customerNo": {
            "maxLength": 20,
            "type": "string"
          },
          "vatRegistrationNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "emailFinance": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "defaultBillingAddress": {
            "type": "boolean",
            "nullable": true
          },
          "countryISOCodeBilling": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "address1Billing": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "address2Billing": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "addressStreetBilling": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "houseNumberBilling": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "boxBilling": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "postCodeBilling": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "cityBilling": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "vatType": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "needInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "dateTimeModified": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": "string (identifier)",
          "tilroyId": "string",
          "name1": "string",
          "name2": "string",
          "emailCustomer": "string",
          "countryISOCode": "string",
          "postcode": "string",
          "addressStreet": "string",
          "houseNumberMain": "string",
          "boxMain": "string",
          "address1": "string",
          "address2": "string",
          "city": "string",
          "language": "string",
          "phoneNo": "string",
          "mobilePhoneNo": "string",
          "customerNo": "string",
          "vatRegistrationNo": "string",
          "companyName": "string",
          "emailFinance": "string",
          "defaultBillingAddress": true,
          "countryISOCodeBilling": "string",
          "address1Billing": "string",
          "address2Billing": "string",
          "addressStreetBilling": "string",
          "houseNumberBilling": "string",
          "boxBilling": "string",
          "postCodeBilling": "string",
          "cityBilling": "string",
          "vatType": "integer",
          "needInvoice": true,
          "dateTimeModified": "string (timestamp)"
        }
      },
      "Microsoft.NAV.document": {
        "title": "document",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string"
          },
          "shopHandlingNo": {
            "maxLength": 10,
            "type": "string"
          },
          "orderDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "sellToCustomerNo": {
            "maxLength": 20,
            "type": "string"
          },
          "selltoName": {
            "maxLength": 100,
            "type": "string"
          },
          "selltoName2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "selltoEmailCustomer": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "selltoAddress": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "selltoAddress2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "selltoHouseNumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "selltoBox": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "selltoPostCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "selltoCity": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "selltoCounty": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "selltoCountryRegion": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "selltoPhoneNo": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "selltoMobilePhoneNo": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "selltoContact": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "billtoVATRegNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "inclVAT": {
            "type": "boolean",
            "nullable": true
          },
          "posTotalAmountDiscount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "posTotalAmountExclVat": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "posTotalAmountInclVat": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "posTotalAmountVat": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "shiptoName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "shiptoName2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "shiptoAddress": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "shiptoAddress2": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "shiptoHouseNumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "shiptoBox": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shiptoPostCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shiptoCity": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "shiptoCounty": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "shiptoCountryRegionCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "shiptoEmail": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "shiptoPhoneNo": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "shiptoContact": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string"
          },
          "services": {
            "type": "string"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "documentLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "orderNo": "string",
          "shopHandlingNo": "string",
          "orderDate": "string (timestamp)",
          "sellToCustomerNo": "string",
          "selltoName": "string",
          "selltoName2": "string",
          "selltoEmailCustomer": "string",
          "selltoAddress": "string",
          "selltoAddress2": "string",
          "selltoHouseNumber": "string",
          "selltoBox": "string",
          "selltoPostCode": "string",
          "selltoCity": "string",
          "selltoCounty": "string",
          "selltoCountryRegion": "string",
          "selltoPhoneNo": "string",
          "selltoMobilePhoneNo": "string",
          "selltoContact": "string",
          "billtoVATRegNo": "string",
          "inclVAT": true,
          "posTotalAmountDiscount": "number",
          "posTotalAmountExclVat": "number",
          "posTotalAmountInclVat": "number",
          "posTotalAmountVat": "number",
          "shiptoName": "string",
          "shiptoName2": "string",
          "shiptoAddress": "string",
          "shiptoAddress2": "string",
          "shiptoHouseNumber": "string",
          "shiptoBox": "string",
          "shiptoPostCode": "string",
          "shiptoCity": "string",
          "shiptoCounty": "string",
          "shiptoCountryRegionCode": "string",
          "shiptoEmail": "string",
          "shiptoPhoneNo": "string",
          "shiptoContact": "string",
          "documentType": "string",
          "services": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "documentLines": [
            {
              "@odata.type": "Microsoft.NAV.documentLines"
            }
          ]
        }
      },
      "Microsoft.NAV.documentLines": {
        "title": "documentLines",
        "type": "object",
        "properties": {
          "entryNo": {
            "type": "integer",
            "format": "int64"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "itemNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lineAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lineDiscountAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "netSalesPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "shopStockNo": {
            "maxLength": 10,
            "type": "string"
          },
          "deliveryDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "shippingAgent": {
            "maxLength": 10,
            "type": "string"
          },
          "collectionMethod": {
            "maxLength": 20,
            "type": "string"
          },
          "tilroyLineId": {
            "maxLength": 30,
            "type": "string"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "entryNo": "integer (identifier)",
          "lineNo": "integer (identifier)",
          "itemNo": "string",
          "description": "string",
          "quantity": "number",
          "unitPrice": "number",
          "lineAmount": "number",
          "lineDiscountAmount": "number",
          "netSalesPrice": "number",
          "shopStockNo": "string",
          "deliveryDate": "string (timestamp)",
          "shippingAgent": "string",
          "collectionMethod": "string",
          "tilroyLineId": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "status": "string"
        }
      },
      "Microsoft.NAV.salesPrice": {
        "title": "salesPrice",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "salesCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "itemNo": {
            "maxLength": 20,
            "type": "string"
          },
          "unitofMeasureCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "minimumQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "startingDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endingDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "item3PL": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            ],
            "nullable": true
          },
          "itemUoM": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "salesCode": "string",
          "itemNo": "string",
          "unitofMeasureCode": "string",
          "unitPrice": "number",
          "minimumQuantity": "number",
          "startingDate": "string (timestamp)",
          "endingDate": "string (timestamp)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemUoM": {
            "@odata.type": "Microsoft.NAV.itemUoM"
          }
        }
      },
      "Microsoft.NAV.item3PL": {
        "title": "item3PL",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "itemNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "vendorItemNo": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "searchDescription": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "baseUnitofMeasure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "vendorNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "countryRegionofOriginCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "countryRegionPurchasedCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "itemCategoryCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "barCodeInnerBox": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "productCategory": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "itemUoMs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "itemNo": "string",
          "vendorItemNo": "string",
          "description": "string",
          "searchDescription": "string",
          "baseUnitofMeasure": "string",
          "vendorNo": "string",
          "countryRegionofOriginCode": "string",
          "countryRegionPurchasedCode": "string",
          "itemCategoryCode": "string",
          "barCodeInnerBox": "string",
          "grossWeight": "number",
          "netWeight": "number",
          "productCategory": "string",
          "itemUoMs": [
            {
              "@odata.type": "Microsoft.NAV.itemUoM"
            }
          ]
        }
      },
      "Microsoft.NAV.itemUoM": {
        "title": "itemUoM",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "codeUoM": {
            "maxLength": 10,
            "type": "string"
          },
          "uomDetails": {
            "type": "string",
            "nullable": true
          },
          "minPickUoM": {
            "type": "boolean",
            "nullable": true
          },
          "qtyperUoM": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lengthUoM": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "widthUoM": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "heightUoM": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "referenceNo": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "codeUoM": "string",
          "uomDetails": "string",
          "minPickUoM": true,
          "qtyperUoM": "number",
          "lengthUoM": "number",
          "widthUoM": "number",
          "heightUoM": "number",
          "referenceNo": "string"
        }
      },
      "Microsoft.NAV.akeneoItem": {
        "title": "akeneoItem",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastDateModified": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "no": "string",
          "description": "string",
          "lastDateModified": "string (timestamp)"
        }
      },
      "Microsoft.NAV.receipt3PL": {
        "title": "receipt3PL",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "transportType": {
            "type": "string",
            "nullable": true
          },
          "referenceNo": {
            "type": "string",
            "nullable": true
          },
          "originalShipmentNo": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cubage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "containerSize": {
            "type": "string",
            "nullable": true
          },
          "vendorNo": {
            "type": "string",
            "nullable": true
          },
          "returnAddress": {
            "type": "string",
            "nullable": true
          },
          "returnAddress2": {
            "type": "string",
            "nullable": true
          },
          "returnCity": {
            "type": "string",
            "nullable": true
          },
          "returnPostCode": {
            "type": "string",
            "nullable": true
          },
          "returnCountry": {
            "type": "string",
            "nullable": true
          },
          "warehouseReceiptDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "createModify": {
            "type": "string",
            "nullable": true
          },
          "receiptLines3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "transportType": "string",
          "referenceNo": "string",
          "originalShipmentNo": "string",
          "grossWeight": "number",
          "cubage": "number",
          "containerSize": "string",
          "vendorNo": "string",
          "returnAddress": "string",
          "returnAddress2": "string",
          "returnCity": "string",
          "returnPostCode": "string",
          "returnCountry": "string",
          "warehouseReceiptDate": "string (timestamp)",
          "comment": "string",
          "location": "string",
          "createModify": "string",
          "receiptLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.receiptLine3PL"
            }
          ]
        }
      },
      "Microsoft.NAV.receiptLine3PL": {
        "title": "receiptLine3PL",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "itemNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "qty": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "qtyRejected": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "nullable": true
          },
          "item3PL": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "itemNo": "string",
          "itemDescription": "string",
          "qty": "number",
          "qtyRejected": "number",
          "reasonCode": "string",
          "unitOfMeasure": "string",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          }
        }
      },
      "Microsoft.NAV.warehousereceipt": {
        "title": "warehousereceipt",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "documentNo": {
            "maxLength": 20,
            "type": "string"
          },
          "locationCode": {
            "maxLength": 10,
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "reference": {
            "maxLength": 35,
            "type": "string"
          },
          "orginalShipmentNo": {
            "maxLength": 20,
            "type": "string"
          },
          "externalDocumentNo": {
            "maxLength": 35,
            "type": "string"
          },
          "receiptDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "transportType": {
            "type": "string"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "warehouseReceiptLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "documentNo": "string",
          "locationCode": "string",
          "documentType": "string",
          "reference": "string",
          "orginalShipmentNo": "string",
          "externalDocumentNo": "string",
          "receiptDate": "string (timestamp)",
          "transportType": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "warehouseReceiptLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseReceiptLines"
            }
          ]
        }
      },
      "Microsoft.NAV.warehouseReceiptLines": {
        "title": "warehouseReceiptLines",
        "type": "object",
        "properties": {
          "entryNo": {
            "type": "integer",
            "format": "int64"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "entryNo": "integer (identifier)",
          "lineNo": "integer (identifier)",
          "no": "string",
          "quantity": "number",
          "unitOfMeasure": "string",
          "reasonCode": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "status": "string"
        }
      },
      "Microsoft.NAV.shipment3PL": {
        "title": "shipment3PL",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "location": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "deliveryTypeCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shipmentDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "shippingAgentCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "shippingAgentName": {
            "type": "string",
            "nullable": true
          },
          "shipToAddressCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shipToName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "shipToStreet": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "shipToBox": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shipToHousenumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "shipToAddressCity": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "shipToAddressPostCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shipToAddressCountryCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "shipToAddressCountryName": {
            "type": "string",
            "nullable": true
          },
          "sellToaddressEmail": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cubage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "orderNo": {
            "type": "string",
            "nullable": true
          },
          "routeCode": {
            "type": "string",
            "nullable": true
          },
          "sequenceNo": {
            "type": "string",
            "nullable": true
          },
          "createModify": {
            "type": "string",
            "nullable": true
          },
          "shipmentLines3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "location": "string",
          "no": "string",
          "deliveryTypeCode": "string",
          "shipmentDate": "string (timestamp)",
          "shippingAgentCode": "string",
          "shippingAgentName": "string",
          "shipToAddressCode": "string",
          "shipToName": "string",
          "shipToStreet": "string",
          "shipToBox": "string",
          "shipToHousenumber": "string",
          "shipToAddressCity": "string",
          "shipToAddressPostCode": "string",
          "shipToAddressCountryCode": "string",
          "shipToAddressCountryName": "string",
          "sellToaddressEmail": "string",
          "languageCode": "string",
          "comment": "string",
          "name": "string",
          "grossWeight": "number",
          "cubage": "number",
          "orderNo": "string",
          "routeCode": "string",
          "sequenceNo": "string",
          "createModify": "string",
          "shipmentLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipmentLine3PL"
            }
          ]
        }
      },
      "Microsoft.NAV.shipmentLine3PL": {
        "title": "shipmentLine3PL",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "tareWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cubage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "item3PL": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            ],
            "nullable": true
          },
          "itemUoM": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "lineNo": "integer",
          "itemNo": "string",
          "quantity": "number",
          "unitOfMeasure": "string",
          "grossWeight": "number",
          "netWeight": "number",
          "tareWeight": "number",
          "cubage": "number",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemUoM": {
            "@odata.type": "Microsoft.NAV.itemUoM"
          }
        }
      },
      "Microsoft.NAV.warehouseshipment": {
        "title": "warehouseshipment",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "documentNo": {
            "maxLength": 20,
            "type": "string"
          },
          "locationCode": {
            "maxLength": 10,
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "reference": {
            "maxLength": 35,
            "type": "string"
          },
          "deliveryDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "warehouseShipmentLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "documentNo": "string",
          "locationCode": "string",
          "documentType": "string",
          "reference": "string",
          "deliveryDate": "string (timestamp)",
          "dateTimeModifiedPTE": "string (timestamp)",
          "warehouseShipmentLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseShipmentLines"
            }
          ]
        }
      },
      "Microsoft.NAV.warehouseShipmentLines": {
        "title": "warehouseShipmentLines",
        "type": "object",
        "properties": {
          "entryNo": {
            "type": "integer",
            "format": "int64"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "carrier": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "ttCode": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "entryNo": "integer (identifier)",
          "lineNo": "integer (identifier)",
          "no": "string",
          "quantity": "number",
          "unitOfMeasure": "string",
          "carrier": "string",
          "ttCode": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "status": "string"
        }
      },
      "Microsoft.NAV.inventoryStatus": {
        "title": "inventoryStatus",
        "type": "object",
        "properties": {
          "location": {
            "maxLength": 10,
            "type": "string"
          },
          "item": {
            "maxLength": 20,
            "type": "string"
          },
          "itemVariant": {
            "maxLength": 10,
            "type": "string"
          },
          "locationType": {
            "type": "string",
            "nullable": true
          },
          "availableStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "availableReservedStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "expectedStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "expectedReservedStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "expectedDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "datetimeRegistered": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "item3PL": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "location": "string (identifier)",
          "item": "string (identifier)",
          "itemVariant": "string (identifier)",
          "locationType": "string",
          "availableStock": "number",
          "availableReservedStock": "number",
          "expectedStock": "number",
          "expectedReservedStock": "number",
          "expectedDate": "string (timestamp)",
          "unitOfMeasure": "string",
          "datetimeRegistered": "string (timestamp)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          }
        }
      },
      "Microsoft.NAV.stockcorrection": {
        "title": "stockcorrection",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "documentNo": {
            "maxLength": 20,
            "type": "string"
          },
          "locationCode": {
            "maxLength": 10,
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "orderDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "deliveryDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "stockCorrectionLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "documentNo": "string",
          "locationCode": "string",
          "documentType": "string",
          "orderDate": "string (timestamp)",
          "deliveryDate": "string (timestamp)",
          "dateTimeModifiedPTE": "string (timestamp)",
          "stockCorrectionLines": [
            {
              "@odata.type": "Microsoft.NAV.stockCorrectionLines"
            }
          ]
        }
      },
      "Microsoft.NAV.stockCorrectionLines": {
        "title": "stockCorrectionLines",
        "type": "object",
        "properties": {
          "entryNo": {
            "type": "integer",
            "format": "int64"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "entryNo": "integer (identifier)",
          "lineNo": "integer (identifier)",
          "no": "string",
          "quantity": "number",
          "reasonCode": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "status": "string"
        }
      },
      "Microsoft.NAV.stockoverview": {
        "title": "stockoverview",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "documentNo": {
            "maxLength": 20,
            "type": "string"
          },
          "locationCode": {
            "maxLength": 10,
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "orderDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "deliveryDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "format": "date"
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "stockOverviewLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "documentNo": "string",
          "locationCode": "string",
          "documentType": "string",
          "orderDate": "string (timestamp)",
          "deliveryDate": "string (timestamp)",
          "dateTimeModifiedPTE": "string (timestamp)",
          "stockOverviewLines": [
            {
              "@odata.type": "Microsoft.NAV.stockOverviewLines"
            }
          ]
        }
      },
      "Microsoft.NAV.stockOverviewLines": {
        "title": "stockOverviewLines",
        "type": "object",
        "properties": {
          "entryNo": {
            "type": "integer",
            "format": "int64"
          },
          "lineNo": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "dateTimeModifiedPTE": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "entryNo": "integer (identifier)",
          "lineNo": "integer (identifier)",
          "no": "string",
          "quantity": "number",
          "reasonCode": "string",
          "dateTimeModifiedPTE": "string (timestamp)",
          "status": "string"
        }
      },
      "Microsoft.NAV.statusParcelService": {
        "title": "statusParcelService",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "trackingNo": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "trackingStatus": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "returnMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "trackingNo": "string",
          "trackingStatus": "string",
          "returnMessage": "string"
        }
      },
      "Microsoft.NAV.company": {
        "title": "company",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "systemVersion": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "businessProfileId": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "systemCreatedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "systemModifiedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemModifiedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.customer"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.document"
            }
          },
          "documentLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.documentLines"
            }
          },
          "salesPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.salesPrice"
            }
          },
          "items3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.item3PL"
            }
          },
          "itemUoMs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.itemUoM"
            }
          },
          "akeneoItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.akeneoItem"
            }
          },
          "receipts3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.receipt3PL"
            }
          },
          "receiptLines3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.receiptLine3PL"
            }
          },
          "warehousereceipts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehousereceipt"
            }
          },
          "warehouseReceiptLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehouseReceiptLines"
            }
          },
          "shipments3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.shipment3PL"
            }
          },
          "shipmentLines3PL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.shipmentLine3PL"
            }
          },
          "warehouseshipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehouseshipment"
            }
          },
          "warehouseShipmentLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.warehouseShipmentLines"
            }
          },
          "inventoryStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.inventoryStatus"
            }
          },
          "stockcorrections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockcorrection"
            }
          },
          "stockCorrectionLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockCorrectionLines"
            }
          },
          "stockoverviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockoverview"
            }
          },
          "stockOverviewLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.stockOverviewLines"
            }
          },
          "statusParcelServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.NAV.statusParcelService"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "systemVersion": "string",
          "name": "string",
          "displayName": "string",
          "businessProfileId": "string",
          "systemCreatedAt": "string (timestamp)",
          "systemCreatedBy": "string",
          "systemModifiedAt": "string (timestamp)",
          "systemModifiedBy": "string",
          "customers": [
            {
              "@odata.type": "Microsoft.NAV.customer"
            }
          ],
          "documents": [
            {
              "@odata.type": "Microsoft.NAV.document"
            }
          ],
          "documentLines": [
            {
              "@odata.type": "Microsoft.NAV.documentLines"
            }
          ],
          "salesPrices": [
            {
              "@odata.type": "Microsoft.NAV.salesPrice"
            }
          ],
          "items3PL": [
            {
              "@odata.type": "Microsoft.NAV.item3PL"
            }
          ],
          "itemUoMs": [
            {
              "@odata.type": "Microsoft.NAV.itemUoM"
            }
          ],
          "akeneoItems": [
            {
              "@odata.type": "Microsoft.NAV.akeneoItem"
            }
          ],
          "receipts3PL": [
            {
              "@odata.type": "Microsoft.NAV.receipt3PL"
            }
          ],
          "receiptLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.receiptLine3PL"
            }
          ],
          "warehousereceipts": [
            {
              "@odata.type": "Microsoft.NAV.warehousereceipt"
            }
          ],
          "warehouseReceiptLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseReceiptLines"
            }
          ],
          "shipments3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipment3PL"
            }
          ],
          "shipmentLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipmentLine3PL"
            }
          ],
          "warehouseshipments": [
            {
              "@odata.type": "Microsoft.NAV.warehouseshipment"
            }
          ],
          "warehouseShipmentLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseShipmentLines"
            }
          ],
          "inventoryStatus": [
            {
              "@odata.type": "Microsoft.NAV.inventoryStatus"
            }
          ],
          "stockcorrections": [
            {
              "@odata.type": "Microsoft.NAV.stockcorrection"
            }
          ],
          "stockCorrectionLines": [
            {
              "@odata.type": "Microsoft.NAV.stockCorrectionLines"
            }
          ],
          "stockoverviews": [
            {
              "@odata.type": "Microsoft.NAV.stockoverview"
            }
          ],
          "stockOverviewLines": [
            {
              "@odata.type": "Microsoft.NAV.stockOverviewLines"
            }
          ],
          "statusParcelServices": [
            {
              "@odata.type": "Microsoft.NAV.statusParcelService"
            }
          ]
        }
      },
      "Microsoft.NAV.subscriptions": {
        "title": "subscriptions",
        "type": "object",
        "properties": {
          "subscriptionId": {
            "maxLength": 150,
            "type": "string"
          },
          "notificationUrl": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "userId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clientState": {
            "maxLength": 2048,
            "type": "string",
            "nullable": true
          },
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemCreatedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "systemModifiedAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemModifiedBy": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "subscriptionId": "string (identifier)",
          "notificationUrl": "string",
          "resource": "string",
          "userId": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "clientState": "string",
          "expirationDateTime": "string (timestamp)",
          "systemCreatedAt": "string (timestamp)",
          "systemCreatedBy": "string",
          "systemModifiedAt": "string (timestamp)",
          "systemModifiedBy": "string"
        }
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "Microsoft.NAV.entityMetadata": {
        "value": {
          "actions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataAction"
            }
          ],
          "entityCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entityName": "String (identifier)",
          "entitySetCaptions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "entitySetName": "String",
          "enumMembers": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataEnumMember"
            }
          ],
          "properties": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataField"
            }
          ]
        }
      },
      "Microsoft.NAV.entityMetadataLabel": {
        "value": {
          "caption": "String",
          "languageCode": 0
        }
      },
      "Microsoft.NAV.entityMetadataField": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String"
        }
      },
      "Microsoft.NAV.entityMetadataAction": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String"
        }
      },
      "Microsoft.NAV.entityMetadataEnumMember": {
        "value": {
          "captions": [
            {
              "@odata.type": "Microsoft.NAV.entityMetadataLabel"
            }
          ],
          "name": "String",
          "value": 0
        }
      },
      "Microsoft.NAV.customer": {
        "value": {
          "address1": "String",
          "address1Billing": "String",
          "address2": "String",
          "address2Billing": "String",
          "addressStreet": "String",
          "addressStreetBilling": "String",
          "boxBilling": "String",
          "boxMain": "String",
          "city": "String",
          "cityBilling": "String",
          "companyName": "String",
          "countryISOCode": "String",
          "countryISOCodeBilling": "String",
          "customerNo": "String",
          "dateTimeModified": "0001-01-01T00:00:00.0000000+00:00",
          "defaultBillingAddress": true,
          "emailCustomer": "String",
          "emailFinance": "String",
          "houseNumberBilling": "String",
          "houseNumberMain": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "language": "String",
          "mobilePhoneNo": "String",
          "name1": "String",
          "name2": "String",
          "needInvoice": true,
          "phoneNo": "String",
          "postcode": "String",
          "postCodeBilling": "String",
          "tilroyId": "String",
          "vatRegistrationNo": "String",
          "vatType": 0
        }
      },
      "Microsoft.NAV.document": {
        "value": {
          "billtoVATRegNo": "String",
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "documentLines": [
            {
              "@odata.type": "Microsoft.NAV.documentLines"
            }
          ],
          "documentType": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "inclVAT": true,
          "orderDate": "0001-01-01T00:00:00.0000000",
          "orderNo": "String",
          "posTotalAmountDiscount": 0,
          "posTotalAmountExclVat": 0,
          "posTotalAmountInclVat": 0,
          "posTotalAmountVat": 0,
          "selltoAddress": "String",
          "selltoAddress2": "String",
          "selltoBox": "String",
          "selltoCity": "String",
          "selltoContact": "String",
          "selltoCountryRegion": "String",
          "selltoCounty": "String",
          "sellToCustomerNo": "String",
          "selltoEmailCustomer": "String",
          "selltoHouseNumber": "String",
          "selltoMobilePhoneNo": "String",
          "selltoName": "String",
          "selltoName2": "String",
          "selltoPhoneNo": "String",
          "selltoPostCode": "String",
          "services": "String",
          "shiptoAddress": "String",
          "shiptoAddress2": "String",
          "shiptoBox": "String",
          "shiptoCity": "String",
          "shiptoContact": "String",
          "shiptoCountryRegionCode": "String",
          "shiptoCounty": "String",
          "shiptoEmail": "String",
          "shiptoHouseNumber": "String",
          "shiptoName": "String",
          "shiptoName2": "String",
          "shiptoPhoneNo": "String",
          "shiptoPostCode": "String",
          "shopHandlingNo": "String"
        }
      },
      "Microsoft.NAV.documentLines": {
        "value": {
          "collectionMethod": "String",
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "deliveryDate": "0001-01-01T00:00:00.0000000",
          "description": "String",
          "entryNo": 0,
          "itemNo": "String",
          "lineAmount": 0,
          "lineDiscountAmount": 0,
          "lineNo": 0,
          "netSalesPrice": 0,
          "quantity": 0,
          "shippingAgent": "String",
          "shopStockNo": "String",
          "status": "String",
          "tilroyLineId": "String",
          "unitPrice": 0
        }
      },
      "Microsoft.NAV.salesPrice": {
        "value": {
          "endingDate": "0001-01-01T00:00:00.0000000",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemNo": "String",
          "itemUoM": {
            "@odata.type": "Microsoft.NAV.itemUoM"
          },
          "minimumQuantity": 0,
          "salesCode": "String",
          "startingDate": "0001-01-01T00:00:00.0000000",
          "unitofMeasureCode": "String",
          "unitPrice": 0
        }
      },
      "Microsoft.NAV.item3PL": {
        "value": {
          "barCodeInnerBox": "String",
          "baseUnitofMeasure": "String",
          "countryRegionofOriginCode": "String",
          "countryRegionPurchasedCode": "String",
          "description": "String",
          "grossWeight": 0,
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "itemCategoryCode": "String",
          "itemNo": "String",
          "itemUoMs": [
            {
              "@odata.type": "Microsoft.NAV.itemUoM"
            }
          ],
          "netWeight": 0,
          "productCategory": "String",
          "searchDescription": "String",
          "vendorItemNo": "String",
          "vendorNo": "String"
        }
      },
      "Microsoft.NAV.itemUoM": {
        "value": {
          "codeUoM": "String",
          "heightUoM": 0,
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "lengthUoM": 0,
          "minPickUoM": true,
          "qtyperUoM": 0,
          "referenceNo": "String",
          "uomDetails": "String",
          "widthUoM": 0
        }
      },
      "Microsoft.NAV.akeneoItem": {
        "value": {
          "description": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "lastDateModified": "0001-01-01T00:00:00.0000000",
          "no": "String"
        }
      },
      "Microsoft.NAV.receipt3PL": {
        "value": {
          "comment": "String",
          "containerSize": "String",
          "createModify": "String",
          "cubage": 0,
          "grossWeight": 0,
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "location": "String",
          "originalShipmentNo": "String",
          "receiptLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.receiptLine3PL"
            }
          ],
          "referenceNo": "String",
          "returnAddress": "String",
          "returnAddress2": "String",
          "returnCity": "String",
          "returnCountry": "String",
          "returnPostCode": "String",
          "transportType": "String",
          "vendorNo": "String",
          "warehouseReceiptDate": "0001-01-01T00:00:00.0000000"
        }
      },
      "Microsoft.NAV.receiptLine3PL": {
        "value": {
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemDescription": "String",
          "itemNo": "String",
          "qty": 0,
          "qtyRejected": 0,
          "reasonCode": "String",
          "unitOfMeasure": "String"
        }
      },
      "Microsoft.NAV.warehousereceipt": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "documentNo": "String",
          "documentType": "String",
          "externalDocumentNo": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "locationCode": "String",
          "orginalShipmentNo": "String",
          "receiptDate": "0001-01-01T00:00:00.0000000",
          "reference": "String",
          "transportType": "String",
          "warehouseReceiptLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseReceiptLines"
            }
          ]
        }
      },
      "Microsoft.NAV.warehouseReceiptLines": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "entryNo": 0,
          "lineNo": 0,
          "no": "String",
          "quantity": 0,
          "reasonCode": "String",
          "status": "String",
          "unitOfMeasure": "String"
        }
      },
      "Microsoft.NAV.shipment3PL": {
        "value": {
          "comment": "String",
          "createModify": "String",
          "cubage": 0,
          "deliveryTypeCode": "String",
          "grossWeight": 0,
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "languageCode": "String",
          "location": "String",
          "name": "String",
          "no": "String",
          "orderNo": "String",
          "routeCode": "String",
          "sellToaddressEmail": "String",
          "sequenceNo": "String",
          "shipmentDate": "0001-01-01T00:00:00.0000000",
          "shipmentLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipmentLine3PL"
            }
          ],
          "shippingAgentCode": "String",
          "shippingAgentName": "String",
          "shipToAddressCity": "String",
          "shipToAddressCode": "String",
          "shipToAddressCountryCode": "String",
          "shipToAddressCountryName": "String",
          "shipToAddressPostCode": "String",
          "shipToBox": "String",
          "shipToHousenumber": "String",
          "shipToName": "String",
          "shipToStreet": "String"
        }
      },
      "Microsoft.NAV.shipmentLine3PL": {
        "value": {
          "cubage": 0,
          "grossWeight": 0,
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemNo": "String",
          "itemUoM": {
            "@odata.type": "Microsoft.NAV.itemUoM"
          },
          "lineNo": 0,
          "netWeight": 0,
          "quantity": 0,
          "tareWeight": 0,
          "unitOfMeasure": "String"
        }
      },
      "Microsoft.NAV.warehouseshipment": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "deliveryDate": "0001-01-01T00:00:00.0000000",
          "documentNo": "String",
          "documentType": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "locationCode": "String",
          "reference": "String",
          "warehouseShipmentLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseShipmentLines"
            }
          ]
        }
      },
      "Microsoft.NAV.warehouseShipmentLines": {
        "value": {
          "carrier": "String",
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "entryNo": 0,
          "lineNo": 0,
          "no": "String",
          "quantity": 0,
          "status": "String",
          "ttCode": "String",
          "unitOfMeasure": "String"
        }
      },
      "Microsoft.NAV.inventoryStatus": {
        "value": {
          "availableReservedStock": 0,
          "availableStock": 0,
          "datetimeRegistered": "0001-01-01T00:00:00.0000000+00:00",
          "expectedDate": "0001-01-01T00:00:00.0000000",
          "expectedReservedStock": 0,
          "expectedStock": 0,
          "item": "String (identifier)",
          "item3PL": {
            "@odata.type": "Microsoft.NAV.item3PL"
          },
          "itemVariant": "String (identifier)",
          "location": "String (identifier)",
          "locationType": "String",
          "unitOfMeasure": "String"
        }
      },
      "Microsoft.NAV.stockcorrection": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "deliveryDate": "0001-01-01T00:00:00.0000000",
          "documentNo": "String",
          "documentType": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "locationCode": "String",
          "orderDate": "0001-01-01T00:00:00.0000000",
          "stockCorrectionLines": [
            {
              "@odata.type": "Microsoft.NAV.stockCorrectionLines"
            }
          ]
        }
      },
      "Microsoft.NAV.stockCorrectionLines": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "entryNo": 0,
          "lineNo": 0,
          "no": "String",
          "quantity": 0,
          "reasonCode": "String",
          "status": "String"
        }
      },
      "Microsoft.NAV.stockoverview": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "deliveryDate": "0001-01-01T00:00:00.0000000",
          "documentNo": "String",
          "documentType": "String",
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "locationCode": "String",
          "orderDate": "0001-01-01T00:00:00.0000000",
          "stockOverviewLines": [
            {
              "@odata.type": "Microsoft.NAV.stockOverviewLines"
            }
          ]
        }
      },
      "Microsoft.NAV.stockOverviewLines": {
        "value": {
          "dateTimeModifiedPTE": "0001-01-01T00:00:00.0000000+00:00",
          "entryNo": 0,
          "lineNo": 0,
          "no": "String",
          "quantity": 0,
          "reasonCode": "String",
          "status": "String"
        }
      },
      "Microsoft.NAV.statusParcelService": {
        "value": {
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "returnMessage": "String",
          "trackingNo": "String",
          "trackingStatus": "String"
        }
      },
      "Microsoft.NAV.company": {
        "value": {
          "akeneoItems": [
            {
              "@odata.type": "Microsoft.NAV.akeneoItem"
            }
          ],
          "businessProfileId": "String",
          "customers": [
            {
              "@odata.type": "Microsoft.NAV.customer"
            }
          ],
          "displayName": "String",
          "documentLines": [
            {
              "@odata.type": "Microsoft.NAV.documentLines"
            }
          ],
          "documents": [
            {
              "@odata.type": "Microsoft.NAV.document"
            }
          ],
          "id": "00000000-0000-0000-0000-000000000000 (identifier)",
          "inventoryStatus": [
            {
              "@odata.type": "Microsoft.NAV.inventoryStatus"
            }
          ],
          "items3PL": [
            {
              "@odata.type": "Microsoft.NAV.item3PL"
            }
          ],
          "itemUoMs": [
            {
              "@odata.type": "Microsoft.NAV.itemUoM"
            }
          ],
          "name": "String",
          "receiptLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.receiptLine3PL"
            }
          ],
          "receipts3PL": [
            {
              "@odata.type": "Microsoft.NAV.receipt3PL"
            }
          ],
          "salesPrices": [
            {
              "@odata.type": "Microsoft.NAV.salesPrice"
            }
          ],
          "shipmentLines3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipmentLine3PL"
            }
          ],
          "shipments3PL": [
            {
              "@odata.type": "Microsoft.NAV.shipment3PL"
            }
          ],
          "statusParcelServices": [
            {
              "@odata.type": "Microsoft.NAV.statusParcelService"
            }
          ],
          "stockCorrectionLines": [
            {
              "@odata.type": "Microsoft.NAV.stockCorrectionLines"
            }
          ],
          "stockcorrections": [
            {
              "@odata.type": "Microsoft.NAV.stockcorrection"
            }
          ],
          "stockOverviewLines": [
            {
              "@odata.type": "Microsoft.NAV.stockOverviewLines"
            }
          ],
          "stockoverviews": [
            {
              "@odata.type": "Microsoft.NAV.stockoverview"
            }
          ],
          "systemCreatedAt": "0001-01-01T00:00:00.0000000+00:00",
          "systemCreatedBy": "00000000-0000-0000-0000-000000000000",
          "systemModifiedAt": "0001-01-01T00:00:00.0000000+00:00",
          "systemModifiedBy": "00000000-0000-0000-0000-000000000000",
          "systemVersion": "String",
          "warehouseReceiptLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseReceiptLines"
            }
          ],
          "warehousereceipts": [
            {
              "@odata.type": "Microsoft.NAV.warehousereceipt"
            }
          ],
          "warehouseShipmentLines": [
            {
              "@odata.type": "Microsoft.NAV.warehouseShipmentLines"
            }
          ],
          "warehouseshipments": [
            {
              "@odata.type": "Microsoft.NAV.warehouseshipment"
            }
          ]
        }
      },
      "Microsoft.NAV.subscriptions": {
        "value": {
          "clientState": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notificationUrl": "String",
          "resource": "String",
          "subscriptionId": "String (identifier)",
          "systemCreatedAt": "0001-01-01T00:00:00.0000000+00:00",
          "systemCreatedBy": "00000000-0000-0000-0000-000000000000",
          "systemModifiedAt": "0001-01-01T00:00:00.0000000+00:00",
          "systemModifiedBy": "00000000-0000-0000-0000-000000000000",
          "userId": "00000000-0000-0000-0000-000000000000"
        }
      }
    }
  },
  "tags": [
    {
      "name": "akeneoItems.akeneoItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.company",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.akeneoItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.customer",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.documentLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.document",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.inventoryStatus",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.itemUoM",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.receiptLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.receipt3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.salesPrice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.shipmentLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.shipment3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.statusParcelService",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.stockCorrectionLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.stockcorrection",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.stockOverviewLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.stockoverview",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.warehouseReceiptLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.warehousereceipt",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.warehouseShipmentLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "companies.warehouseshipment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "customers.customer",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "documentLines.documentLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "documents.document",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "documents.documentLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "entityDefinitions.entityMetadata",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "inventoryStatus.inventoryStatus",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "inventoryStatus.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "items3PL.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "items3PL.itemUoM",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "itemUoMs.itemUoM",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "receiptLines3PL.receiptLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "receiptLines3PL.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "receipts3PL.receipt3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "receipts3PL.receiptLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "salesPrices.salesPrice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "salesPrices.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "salesPrices.itemUoM",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shipmentLines3PL.shipmentLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shipmentLines3PL.item3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shipmentLines3PL.itemUoM",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shipments3PL.shipment3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shipments3PL.shipmentLine3PL",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "statusParcelServices.statusParcelService",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockCorrectionLines.stockCorrectionLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockcorrections.stockcorrection",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockcorrections.stockCorrectionLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockOverviewLines.stockOverviewLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockoverviews.stockoverview",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "stockoverviews.stockOverviewLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscriptions.subscriptions",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehouseReceiptLines.warehouseReceiptLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehousereceipts.warehousereceipt",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehousereceipts.warehouseReceiptLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehouseShipmentLines.warehouseShipmentLines",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehouseshipments.warehouseshipment",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "warehouseshipments.warehouseShipmentLines",
      "x-ms-docs-toc-type": "page"
    }
  ]
}